(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    212779,       4324]
NotebookOptionsPosition[    204798,       4203]
NotebookOutlinePosition[    205254,       4220]
CellTagsIndexPosition[    205211,       4217]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "\t\t\t",
 StyleBox["DATA STRUCTURE SORTING ALGORITHMS AND  TIME COMPLEXITY", "Title",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.7837714327403603`*^9, 3.7837715084750986`*^9}, {
  3.784333509589178*^9, 3.78433351156688*^9}, {3.784335599244524*^9, 
  3.784335667282402*^9}},ExpressionUUID->"a374b088-54a9-4aee-9008-\
cbede0616881"],

Cell["\<\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tName: Harshad Kumar Elangovan\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t   Course:Data and Computational Science
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStudent ID: 19200349
\t\t\t\t\t\t\t\t\t\t\t\t\t\tTopic:Data structure Sorting Algorithms and its \
Time Complexity\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.784456156954371*^9, 3.7844563426937*^9}, {
   3.784456398947931*^9, 3.7844564214507866`*^9}, {3.7844565905335736`*^9, 
   3.784456590814874*^9}, {3.784456785103758*^9, 3.784456801908884*^9}, {
   3.7844589028045597`*^9, 3.7844589414888988`*^9}, 3.7844600943425703`*^9, {
   3.784460133019803*^9, 
   3.7844601464788675`*^9}},ExpressionUUID->"182e28cf-dd67-4e55-b1a1-\
d6436989d94c"],

Cell[TextData[{
 StyleBox["Objective:", "Section",
  FontVariations->{"Underline"->True}],
 StyleBox["\n", "Subsection"],
 "The objective of this project is to compare and execute the sorting \
algorithms on a list of random values and conclude the fastest among the \
defined algorithms. "
}], "Text",
 CellChangeTimes->{
  3.784333530503212*^9, {3.78433569411878*^9, 
   3.7843356967102118`*^9}},ExpressionUUID->"047758fc-5c7a-49f2-bed6-\
25edeb5fb716"],

Cell["\<\
Data Structure is a concept of Data organization, management and storage \
format that helps in efficient functioning of the block of codes for a \
particular task.One part of Data organization in Data Structure is the \
sorting Algorithms.
There are several Sorting Algorithms that sort data based on unique methods. \
Few of the sorting algorithms are,\
\>", "Text",
 CellChangeTimes->{
  3.78433354962551*^9, {3.784337765971078*^9, 
   3.784337775920147*^9}},ExpressionUUID->"2efce5f8-e751-4d1d-99fb-\
2dd1654eed0f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Selection Sort", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 3.784337797942787*^9}, 
   3.7843378357166967`*^9},ExpressionUUID->"3caea936-7cf5-4833-a4f6-\
0a1e10dc6a46"],

Cell[TextData[StyleBox["Bubble Sort", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 
  3.784337833559004*^9}},ExpressionUUID->"846cce7b-79b9-4a23-bf63-\
3259b1427856"],

Cell[TextData[StyleBox["Insertion Sort", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 
  3.7843378313247232`*^9}},ExpressionUUID->"fa88dd5f-ecb4-4382-a321-\
47072a895d0f"],

Cell[TextData[StyleBox["Quick Sort", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 
  3.7843378289509687`*^9}},ExpressionUUID->"f5a7f7f0-2012-4975-8f34-\
c2f874cc7250"],

Cell[TextData[StyleBox["Merge Sort", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 
  3.78433782661233*^9}},ExpressionUUID->"17003b53-935e-422d-bcb2-\
f6f599c299c3"],

Cell[TextData[StyleBox["Heap Sort,etc.", "ItemNumbered"]], "Item",
 CellChangeTimes->{{3.7843377839192266`*^9, 
  3.784337824151719*^9}},ExpressionUUID->"984163c4-4117-435f-baa2-\
c75c2b638296"]
}, Open  ]],

Cell["\<\
In this project, we will have a look at four Sorting algorithms \
\>", "Text",
 CellChangeTimes->{{3.7843335715119486`*^9, 3.784333601575555*^9}, {
  3.78433785206173*^9, 
  3.7843378571702886`*^9}},ExpressionUUID->"0d09629c-3281-44d9-83af-\
627dc501b7b7"],

Cell[CellGroupData[{

Cell["Selection Sort", "Subitem",
 CellChangeTimes->{{3.7843378724936233`*^9, 
  3.7843378820885625`*^9}},ExpressionUUID->"dec54cfd-e056-43b9-8964-\
229f49064100"],

Cell["Insertion Sort", "Subitem",
 CellChangeTimes->{{3.7843378724936233`*^9, 
  3.784337890256518*^9}},ExpressionUUID->"25c70f88-ef7c-40f1-8fb0-\
b7d58bd92ec0"],

Cell["Bubble Sort", "Subitem",
 CellChangeTimes->{{3.7843378724936233`*^9, 
  3.7843378957179675`*^9}},ExpressionUUID->"560a5c6b-0580-49c2-8a3f-\
303c5559d116"],

Cell["Quick Sort.", "Subitem",
 CellChangeTimes->{{3.7843378724936233`*^9, 
  3.784337902745155*^9}},ExpressionUUID->"04e86f78-1def-4020-8e1e-\
4d5b424c8fba"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7843336133949175`*^9, 3.7843336248362765`*^9}, {
  3.7844605252480726`*^9, 3.7844605299196777`*^9}, {3.784460613989169*^9, 
  3.7844606191302767`*^9}},ExpressionUUID->"88b928ed-b244-4405-a0c4-\
cac63f067cc8"],

Cell["", "Text",ExpressionUUID->"ce285835-a316-4d96-a3ba-c0f4b3070526"],

Cell[TextData[{
 StyleBox["Selection Sort Algorithm:", "Section",
  FontVariations->{"Underline"->True}],
 StyleBox["\n",
  FontVariations->{"Underline"->True}],
 "Selection Sort Algorithm sorts the list of values by repeatedly finding the \
minimum element from unsorted list and swaps it to the beginning of the \
list.Once the sorting is done, the elements are placed in the ascending order."
}], "Text",
 CellChangeTimes->{
  3.78377152703493*^9, {3.784333692871263*^9, 
   3.7843337100014505`*^9}},ExpressionUUID->"e17b33a5-b3c4-4f79-8c28-\
536a73b89254"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"selectionSort", "[", "values1_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"listval", "=", "values1"}], ",", "i", ",", "j", ",", "temp", 
       ",", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "values1", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"i", " ", "<", " ", "n"}], "  ", ",", 
        RowBox[{
         RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"temp", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Print", "[", 
           RowBox[{"listval", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "*)"}], " ", 
         RowBox[{"(*", 
          RowBox[{
          "These", " ", "print", " ", "statements", " ", "can", " ", "be", 
           " ", "used", " ", "as", " ", "a", " ", "debugging", " ", "step", 
           " ", "while", " ", "running", " ", "the", " ", 
           RowBox[{"function", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "i"}], ",", 
           RowBox[{"j", " ", "<", "n"}], " ", ",", 
           RowBox[{
            RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"listval", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "<", 
               RowBox[{"listval", "[", 
                RowBox[{"[", "temp", "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"listval", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], ";", 
                RowBox[{"Print", "[", 
                 RowBox[{"listval", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], ";"}], "*)"}], 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"temp", "=", "j"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"listval", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"i", ",", "temp"}], "}"}], "]"}], "]"}], "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listval", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"i", ",", "temp"}], "}"}], "]"}], "]"}], "=", 
          RowBox[{"listval", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"temp", ",", "i"}], "}"}], "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "listval", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "listval"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7843091085557156`*^9, 3.78430910901268*^9}, {
  3.7843336307594166`*^9, 3.78433367401867*^9}, {3.7844602652361813`*^9, 
  3.784460270316592*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"22c8c732-3e09-461d-8eb0-25ccff88fb7c"],

Cell[TextData[{
 StyleBox["Insertion Sort Algorithm:", "Section",
  FontVariations->{"Underline"->True}],
 "\nThis type of sorting method works on all the values of the list. It \
compares the element with other elements in list and inserts it to the \
existing list. "
}], "Text",
 CellChangeTimes->{{3.7840672855417213`*^9, 3.78406729733955*^9}, 
   3.7840781579352856`*^9, {3.784333722151929*^9, 
   3.7843337239022007`*^9}},ExpressionUUID->"811ac69a-a74f-4cfd-9202-\
88e7dcfedf42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"insertionSort", "[", "values1_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"listval", "=", "values1"}], ",", "i", ",", "j", ",", "temp", 
      ",", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", "[", "values1", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", "n"}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"listval", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"j", ">", "0"}], " ", "&&", " ", 
           RowBox[{"(", 
            RowBox[{"temp", "<", 
             RowBox[{"listval", "[", 
              RowBox[{"[", 
               RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"listval", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "=", 
            RowBox[{"listval", "[", 
             RowBox[{"[", 
              RowBox[{"j", "-", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"j", "--"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listval", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", "temp"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "listval"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.784067310496835*^9, 3.784067322637894*^9}, {
   3.7840675343026743`*^9, 3.7840675672200375`*^9}, {3.784068498507918*^9, 
   3.784068655340784*^9}, {3.7840687214530306`*^9, 3.784068800933345*^9}, {
   3.7840688396905084`*^9, 3.7840688997082033`*^9}, {3.784068943797759*^9, 
   3.7840690478894296`*^9}, {3.784069092382128*^9, 3.7840691155072575`*^9}, {
   3.784069154777441*^9, 3.784069158911992*^9}, {3.784069392176632*^9, 
   3.7840694284113903`*^9}, {3.784069664343072*^9, 3.784069688627115*^9}, {
   3.7840698070428867`*^9, 3.784069809108616*^9}, 3.7840723539497147`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"9b3e2d03-ae5d-44f5-9a83-7903f64d1f23"],

Cell[TextData[{
 StyleBox["Bubble Sort Algorithm:", "Section",
  FontVariations->{"Underline"->True}],
 "\nThis is the simplest sorting Algorithm which is executed by comparing and \
swapping the elements in the list based on the order. If number is larger \
than the number next to it, then it is swapped and the smaller numbers are \
placed in ascending order."
}], "Text",
 CellChangeTimes->{{3.7840783099107585`*^9, 3.784078317744956*^9}, {
  3.7843337418502383`*^9, 
  3.7843337450326695`*^9}},ExpressionUUID->"abc0be64-411b-4739-9d41-\
9b255d0c76fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubbleSort", "[", "values1_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"listval", "=", "values1"}], ",", "i", ",", "j", ",", "temp", 
      ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "values1", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"i", " ", "<", "  ", 
        RowBox[{"n", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{"(", 
            RowBox[{"n", "-", "i"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"listval", "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", ">", " ", 
              RowBox[{"listval", "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"temp", " ", "=", " ", 
               RowBox[{"listval", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"listval", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
               RowBox[{"listval", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"listval", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", "temp"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "listval"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7840783202408857`*^9, 3.7840784831422944`*^9}, {
  3.7840788647181797`*^9, 3.7840788678003564`*^9}, {3.784079112703742*^9, 
  3.7840792453231115`*^9}, {3.78407932225222*^9, 3.78407943408565*^9}, {
  3.7840795932736526`*^9, 3.7840795981893663`*^9}, {3.784079813945674*^9, 
  3.7840798581258535`*^9}, {3.784079900977252*^9, 3.784079902266508*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"859def7f-320e-446b-8f8a-9a59a7c9fbac"],

Cell[TextData[{
 StyleBox["Quick Sort Algorithm:", "Section",
  FontVariations->{"Underline"->True}],
 "\nThe Quick Sort is a type of Divide and COnquer Algorithm which picks the \
elements as pivot and splits the list and sorts the sublists seperately. This \
partition of values helps in re-arranging the values in the both the sublists \
and then combines it to form a complete sorted list."
}], "Text",
 CellChangeTimes->{{3.784282807291172*^9, 3.784282814851262*^9}, {
  3.78433376086135*^9, 
  3.7843337617499676`*^9}},ExpressionUUID->"077a9e21-35cb-464d-8426-\
e36b36123565"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"quickSort", "[", "list_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listval", "=", "list"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listval", "=", 
      RowBox[{"subSort", "[", 
       RowBox[{"listval", ",", "1", ",", 
        RowBox[{"Length", "[", "listval", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "listval"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subSort", "[", 
   RowBox[{"values_", ",", "start_", ",", "end_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"llist", "=", "values"}], ",", 
      RowBox[{"pivot", "=", 
       RowBox[{"values", "[", 
        RowBox[{"[", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}], "]"}], 
        "]"}]}], ",", 
      RowBox[{"i", "=", "start"}], ",", 
      RowBox[{"j", "=", "end"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"llist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "<", "pivot"}], ",", 
          RowBox[{"i", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"llist", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ">", "pivot"}], ",", 
          RowBox[{"j", "--"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[GreaterEqual]", " ", "j"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"llist", "=", 
         RowBox[{"swap", "[", 
          RowBox[{"llist", ",", "i", ",", "j"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", "end"}], ";", "\[IndentingNewLine]", 
        RowBox[{"pivot", "=", 
         RowBox[{"llist", "[", 
          RowBox[{"[", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}], "]"}], 
          "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"start", "\[NotEqual]", "end"}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"start", "\[Equal]", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}]}], 
            ",", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"llist", "[", 
             RowBox[{"[", "start", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            "\t\t\t", 
            RowBox[{"subSort", "[", 
             RowBox[{"llist", ",", "start", ",", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}]}], 
             "]"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t  ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"end", "\[Equal]", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}]}], 
            ",", 
            RowBox[{"llist", "[", 
             RowBox[{"[", "end", "]"}], "]"}], ",", 
            RowBox[{"subSort", "[", 
             RowBox[{"llist", ",", 
              RowBox[{
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"start", "+", "end"}], ")"}], "/", "2"}], "]"}], 
               "+", "1"}], ",", "end"}], "]"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"llist", "[", 
          RowBox[{"[", "start", "]"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"swap", "[", 
   RowBox[{"list_", ",", "i_", ",", "j_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", "=", "list"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"l", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"l", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "l"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{
  3.7842750239000397`*^9, {3.784275303413753*^9, 3.7842753046154423`*^9}, {
   3.7842753857335234`*^9, 3.784275386658417*^9}, {3.7842754762129364`*^9, 
   3.7842754776347103`*^9}, {3.784275987010761*^9, 3.784276039088627*^9}, {
   3.7842761522711334`*^9, 3.7842761530203047`*^9}, {3.7842764003288574`*^9, 
   3.7842764017907257`*^9}, {3.784276502408236*^9, 3.784276538380664*^9}, {
   3.7842768329571877`*^9, 3.784276923544428*^9}, {3.784277613765648*^9, 
   3.7842777360124345`*^9}, {3.784277777310133*^9, 3.7842777796259623`*^9}, {
   3.7842778140787888`*^9, 3.7842778168098288`*^9}, {3.7842778633352427`*^9, 
   3.784277920187725*^9}, {3.784278187816027*^9, 3.78427822479084*^9}, {
   3.784278264948268*^9, 3.7842783099753284`*^9}, 3.7842831730337315`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"8a0a2281-9e91-4c79-82fd-300a7473659c"],

Cell["\<\

\
\>", "Text",
 CellChangeTimes->{{3.7843359087391834`*^9, 
  3.784335911787159*^9}},ExpressionUUID->"c449fa79-fa30-4860-8d57-\
1c280aaca539"],

Cell[TextData[{
 StyleBox["Random Values Generation:", "Subsection",
  FontVariations->{"Underline"->True}],
 "\nIn this project, I\[CloseCurlyQuote]ve taken four different range of \
random values and used these sorting algorithms to check the duration in \
which the functions sort the list of random values. In other words, this is \
done to check the time complexity of the algorithms."
}], "Text",
 CellChangeTimes->{{3.7843096459505134`*^9, 3.784309653158104*^9}, {
   3.7843337936775084`*^9, 3.7843338069679937`*^9}, 
   3.784336164106933*^9},ExpressionUUID->"4998ab41-a692-47bc-bef3-\
a07de5357c88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomvalues10000", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "100000", "]"}], ",", "10000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.783459598994343*^9, 3.7834596009264174`*^9}, {
   3.783459664865665*^9, 3.7834596774692*^9}, {3.7834597658896713`*^9, 
   3.783459777173447*^9}, 3.7834600521833806`*^9, {3.783772028100593*^9, 
   3.7837720488690042`*^9}, 3.7837722242599907`*^9, 3.7837723696232405`*^9, {
   3.784069900836093*^9, 3.7840699016459346`*^9}, 3.784283123893197*^9, 
   3.7842839164564123`*^9, {3.7843090165031548`*^9, 3.784309022910944*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"f514f992-0506-4caf-b4d1-a6a273fea8cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomvalues50000", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "1000000", "]"}], ",", "50000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7842839215364685`*^9, 3.784283948920434*^9}, {
  3.784309030853569*^9, 3.784309034455482*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"d6bc5f36-2354-4e55-ab7f-bb043c8568a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomvalues1000", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "10000", "]"}], ",", "1000"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"9e455d3f-582a-463b-9071-1a049394e27d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomvalues10", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{"Range", "[", "100", "]"}], ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.784309037187086*^9, 3.7843090394644527`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5e4bc9b7-4dc0-403f-81a5-f19640de593c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "92", ",", "83", ",", "62", ",", "94", ",", "11", ",", "72", ",", "43", ",",
    "36", ",", "75", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.7843090714004755`*^9, 3.7843248843345375`*^9, 
  3.784397889698551*^9, 3.784440227364781*^9, 3.784454783775359*^9, 
  3.7844604483361335`*^9, 3.7844606425907226`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"3a53b860-5d4a-4b2a-b0be-fa5295d40228"]
}, Open  ]],

Cell[TextData[StyleBox["Sorting 10 Random Values:", "Subsection",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.784309660998736*^9, 
  3.7843096887426653`*^9}},ExpressionUUID->"97c30064-6495-449b-ba48-\
e559b80da5d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"selectionsort10", "=", 
  RowBox[{
   RowBox[{"selectionSort", "[", "randomvalues10", "]"}], "//", 
   "Timing"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertionsort10", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"insertionSort", "[", "randomvalues10", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bubblesort10", "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"bubbleSort", "[", "randomvalues10", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quicksort10", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"quickSort", "[", "randomvalues10", "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.784309149849081*^9, 3.7843093081923013`*^9}, {
  3.784309439932087*^9, 3.7843094477695255`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"5dd4f5eb-aa69-4ec6-b84c-9cb3927804ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "22", ",", "36", ",", "43", ",", "62", ",", "72", ",", "75", 
     ",", "83", ",", "92", ",", "94"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7843093104602814`*^9, {3.7843094501435328`*^9, 3.7843094600409994`*^9}, 
   3.7843248929794016`*^9, 3.7843978937698655`*^9, 3.7844402319446187`*^9, 
   3.7844547877586346`*^9, 3.7844604960494466`*^9, 3.78446064549076*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"c31dad6a-bd27-4b77-8c3f-8d9ca6d7f0d7"]
}, Open  ]],

Cell[TextData[StyleBox["Sorting 1000 Random Values:", "Subsection",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.784309696571152*^9, 
  3.7843097076494427`*^9}},ExpressionUUID->"e8a7f34a-5f69-4d3d-952a-\
d6af97937b2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"selectionsort1000", "=", 
  RowBox[{"Timing", "[", 
   RowBox[{"selectionSort", "[", "randomvalues1000", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertionsort1000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"insertionSort", "[", "randomvalues1000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bubblesort1000", "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"bubbleSort", "[", "randomvalues1000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quicksort1000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"quickSort", "[", "randomvalues1000", "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7843093333142796`*^9, 3.7843094314527354`*^9}, 
   3.784309558049014*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"3498b7a8-0699-495e-a70a-7e3a69a65fcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.59375`", ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "7", ",", "48", ",", "69", ",", "78", ",", "79", ",", "84", ",",
      "87", ",", "109", ",", "122", ",", "138", ",", "151", ",", "200", ",", 
     "219", ",", "220", ",", "268", ",", "282", ",", "304", ",", "310", ",", 
     "313", ",", "315", ",", "317", ",", "318", ",", "319", ",", "327", ",", 
     "329", ",", "333", ",", "350", ",", "352", ",", "355", ",", "367", ",", 
     "368", ",", "381", ",", "410", ",", "417", ",", "426", ",", "441", ",", 
     "485", ",", "488", ",", "492", ",", "524", ",", "529", ",", "531", ",", 
     "532", ",", "541", ",", "542", ",", "545", ",", "552", ",", "579", ",", 
     "582", ",", "583", ",", "593", ",", "622", ",", "630", ",", "634", ",", 
     "647", ",", "659", ",", "671", ",", "679", ",", "682", ",", "686", ",", 
     "688", ",", "692", ",", "699", ",", "706", ",", "731", ",", "740", ",", 
     "741", ",", "762", ",", "773", ",", "782", ",", "783", ",", "789", ",", 
     "798", ",", "805", ",", "819", ",", "852", ",", "865", ",", "866", ",", 
     "879", ",", "882", ",", "892", ",", "902", ",", "912", ",", "918", ",", 
     "921", ",", "924", ",", "928", ",", "958", ",", "984", ",", "992", ",", 
     "1003", ",", "1009", ",", "1012", ",", "1024", ",", "1027", ",", "1034", 
     ",", "1062", ",", "1063", ",", "1064", ",", "1088", ",", "1093", ",", 
     "1100", ",", "1105", ",", "1111", ",", "1121", ",", "1122", ",", "1124", 
     ",", "1132", ",", "1149", ",", "1156", ",", "1170", ",", "1176", ",", 
     "1179", ",", "1201", ",", "1206", ",", "1226", ",", "1235", ",", "1246", 
     ",", "1247", ",", "1251", ",", "1253", ",", "1254", ",", "1257", ",", 
     "1267", ",", "1275", ",", "1283", ",", "1311", ",", "1330", ",", "1332", 
     ",", "1340", ",", "1341", ",", "1374", ",", "1383", ",", "1395", ",", 
     "1398", ",", "1415", ",", "1418", ",", "1420", ",", "1425", ",", "1430", 
     ",", "1431", ",", "1439", ",", "1441", ",", "1445", ",", "1448", ",", 
     "1461", ",", "1478", ",", "1489", ",", "1499", ",", "1553", ",", "1574", 
     ",", "1575", ",", "1583", ",", "1584", ",", "1590", ",", "1605", ",", 
     "1616", ",", "1619", ",", "1621", ",", "1623", ",", "1632", ",", "1648", 
     ",", "1656", ",", "1660", ",", "1679", ",", "1690", ",", "1732", ",", 
     "1740", ",", "1752", ",", "1758", ",", "1762", ",", "1766", ",", "1768", 
     ",", "1790", ",", "1803", ",", "1808", ",", "1817", ",", "1835", ",", 
     "1860", ",", "1864", ",", "1866", ",", "1867", ",", "1899", ",", "1901", 
     ",", "1903", ",", "1904", ",", "1914", ",", "1932", ",", "1936", ",", 
     "1937", ",", "1958", ",", "1972", ",", "1979", ",", "1993", ",", "1998", 
     ",", "2000", ",", "2005", ",", "2015", ",", "2021", ",", "2028", ",", 
     "2029", ",", "2042", ",", "2058", ",", "2064", ",", "2073", ",", "2075", 
     ",", "2086", ",", "2087", ",", "2094", ",", "2099", ",", "2103", ",", 
     "2111", ",", "2123", ",", "2133", ",", "2164", ",", "2178", ",", "2196", 
     ",", "2209", ",", "2211", ",", "2219", ",", "2226", ",", "2232", ",", 
     "2233", ",", "2237", ",", "2251", ",", "2256", ",", "2268", ",", "2271", 
     ",", "2279", ",", "2281", ",", "2289", ",", "2292", ",", "2299", ",", 
     "2301", ",", "2305", ",", "2306", ",", "2330", ",", "2339", ",", "2346", 
     ",", "2349", ",", "2382", ",", "2394", ",", "2407", ",", "2408", ",", 
     "2420", ",", "2421", ",", "2438", ",", "2442", ",", "2443", ",", "2449", 
     ",", "2455", ",", "2466", ",", "2469", ",", "2472", ",", "2473", ",", 
     "2476", ",", "2540", ",", "2551", ",", "2563", ",", "2566", ",", "2569", 
     ",", "2578", ",", "2589", ",", "2620", ",", "2634", ",", "2647", ",", 
     "2648", ",", "2659", ",", "2680", ",", "2692", ",", "2695", ",", "2696", 
     ",", "2698", ",", "2699", ",", "2718", ",", "2726", ",", "2728", ",", 
     "2760", ",", "2764", ",", "2797", ",", "2804", ",", "2807", ",", "2817", 
     ",", "2830", ",", "2835", ",", "2837", ",", "2847", ",", "2876", ",", 
     "2888", ",", "2894", ",", "2903", ",", "2921", ",", "2928", ",", "2939", 
     ",", "2946", ",", "2964", ",", "2977", ",", "2984", ",", "2990", ",", 
     "2997", ",", "3019", ",", "3020", ",", "3039", ",", "3065", ",", "3095", 
     ",", "3098", ",", "3108", ",", "3111", ",", "3117", ",", "3119", ",", 
     "3127", ",", "3129", ",", "3136", ",", "3137", ",", "3139", ",", "3162", 
     ",", "3182", ",", "3206", ",", "3211", ",", "3213", ",", "3216", ",", 
     "3223", ",", "3234", ",", "3241", ",", "3244", ",", "3256", ",", "3257", 
     ",", "3259", ",", "3262", ",", "3311", ",", "3323", ",", "3330", ",", 
     "3332", ",", "3345", ",", "3376", ",", "3378", ",", "3383", ",", "3385", 
     ",", "3387", ",", "3389", ",", "3392", ",", "3424", ",", "3450", ",", 
     "3454", ",", "3456", ",", "3466", ",", "3470", ",", "3477", ",", "3510", 
     ",", "3527", ",", "3536", ",", "3543", ",", "3549", ",", "3550", ",", 
     "3554", ",", "3556", ",", "3573", ",", "3599", ",", "3601", ",", "3610", 
     ",", "3613", ",", "3625", ",", "3633", ",", "3647", ",", "3649", ",", 
     "3677", ",", "3678", ",", "3687", ",", "3692", ",", "3710", ",", "3726", 
     ",", "3753", ",", "3789", ",", "3793", ",", "3797", ",", "3801", ",", 
     "3807", ",", "3822", ",", "3824", ",", "3830", ",", "3831", ",", "3833", 
     ",", "3838", ",", "3847", ",", "3856", ",", "3857", ",", "3862", ",", 
     "3887", ",", "3891", ",", "3901", ",", "3914", ",", "3919", ",", "3942", 
     ",", "3945", ",", "3952", ",", "3966", ",", "3980", ",", "3997", ",", 
     "4001", ",", "4010", ",", "4017", ",", "4041", ",", "4044", ",", "4048", 
     ",", "4061", ",", "4086", ",", "4091", ",", "4095", ",", "4113", ",", 
     "4115", ",", "4116", ",", "4136", ",", "4138", ",", "4146", ",", "4155", 
     ",", "4167", ",", "4190", ",", "4198", ",", "4218", ",", "4222", ",", 
     "4233", ",", "4238", ",", "4240", ",", "4299", ",", "4302", ",", "4339", 
     ",", "4341", ",", "4350", ",", "4351", ",", "4355", ",", "4357", ",", 
     "4365", ",", "4367", ",", "4372", ",", "4382", ",", "4397", ",", "4403", 
     ",", "4407", ",", "4424", ",", "4448", ",", "4493", ",", "4497", ",", 
     "4498", ",", "4499", ",", "4501", ",", "4505", ",", "4506", ",", "4511", 
     ",", "4525", ",", "4527", ",", "4530", ",", "4534", ",", "4553", ",", 
     "4556", ",", "4557", ",", "4567", ",", "4571", ",", "4576", ",", "4577", 
     ",", "4578", ",", "4583", ",", "4585", ",", "4589", ",", "4602", ",", 
     "4610", ",", "4611", ",", "4643", ",", "4663", ",", "4668", ",", "4671", 
     ",", "4680", ",", "4701", ",", "4704", ",", "4726", ",", "4730", ",", 
     "4735", ",", "4740", ",", "4745", ",", "4748", ",", "4759", ",", "4761", 
     ",", "4772", ",", "4778", ",", "4781", ",", "4822", ",", "4824", ",", 
     "4834", ",", "4863", ",", "4877", ",", "4899", ",", "4901", ",", "4914", 
     ",", "4937", ",", "4941", ",", "4942", ",", "4959", ",", "4973", ",", 
     "4974", ",", "4980", ",", "4985", ",", "4990", ",", "4997", ",", "5026", 
     ",", "5034", ",", "5040", ",", "5048", ",", "5053", ",", "5061", ",", 
     "5080", ",", "5141", ",", "5142", ",", "5154", ",", "5155", ",", "5158", 
     ",", "5161", ",", "5173", ",", "5195", ",", "5223", ",", "5230", ",", 
     "5233", ",", "5234", ",", "5242", ",", "5247", ",", "5267", ",", "5272", 
     ",", "5282", ",", "5305", ",", "5306", ",", "5310", ",", "5321", ",", 
     "5343", ",", "5345", ",", "5346", ",", "5350", ",", "5358", ",", "5372", 
     ",", "5377", ",", "5388", ",", "5396", ",", "5399", ",", "5421", ",", 
     "5424", ",", "5430", ",", "5450", ",", "5460", ",", "5472", ",", "5477", 
     ",", "5487", ",", "5489", ",", "5506", ",", "5523", ",", "5538", ",", 
     "5542", ",", "5558", ",", "5564", ",", "5589", ",", "5603", ",", "5605", 
     ",", "5615", ",", "5616", ",", "5623", ",", "5640", ",", "5643", ",", 
     "5651", ",", "5653", ",", "5656", ",", "5657", ",", "5670", ",", "5672", 
     ",", "5690", ",", "5707", ",", "5710", ",", "5714", ",", "5720", ",", 
     "5728", ",", "5743", ",", "5755", ",", "5774", ",", "5790", ",", "5795", 
     ",", "5796", ",", "5819", ",", "5822", ",", "5858", ",", "5872", ",", 
     "5880", ",", "5886", ",", "5916", ",", "5924", ",", "5925", ",", "5929", 
     ",", "5935", ",", "5951", ",", "5977", ",", "5997", ",", "5998", ",", 
     "6005", ",", "6008", ",", "6018", ",", "6021", ",", "6032", ",", "6037", 
     ",", "6040", ",", "6041", ",", "6042", ",", "6043", ",", "6049", ",", 
     "6061", ",", "6071", ",", "6074", ",", "6079", ",", "6089", ",", "6116", 
     ",", "6132", ",", "6140", ",", "6147", ",", "6148", ",", "6152", ",", 
     "6156", ",", "6161", ",", "6163", ",", "6167", ",", "6183", ",", "6192", 
     ",", "6204", ",", "6215", ",", "6218", ",", "6222", ",", "6236", ",", 
     "6243", ",", "6250", ",", "6274", ",", "6278", ",", "6279", ",", "6285", 
     ",", "6298", ",", "6299", ",", "6302", ",", "6304", ",", "6310", ",", 
     "6319", ",", "6339", ",", "6347", ",", "6350", ",", "6355", ",", "6383", 
     ",", "6392", ",", "6405", ",", "6406", ",", "6427", ",", "6439", ",", 
     "6465", ",", "6473", ",", "6477", ",", "6490", ",", "6494", ",", "6503", 
     ",", "6514", ",", "6521", ",", "6523", ",", "6527", ",", "6529", ",", 
     "6550", ",", "6559", ",", "6570", ",", "6572", ",", "6573", ",", "6579", 
     ",", "6586", ",", "6588", ",", "6595", ",", "6599", ",", "6608", ",", 
     "6610", ",", "6632", ",", "6636", ",", "6637", ",", "6643", ",", "6646", 
     ",", "6650", ",", "6654", ",", "6657", ",", "6663", ",", "6667", ",", 
     "6668", ",", "6674", ",", "6682", ",", "6688", ",", "6690", ",", "6695", 
     ",", "6696", ",", "6697", ",", "6705", ",", "6711", ",", "6713", ",", 
     "6721", ",", "6726", ",", "6749", ",", "6758", ",", "6773", ",", "6777", 
     ",", "6787", ",", "6804", ",", "6816", ",", "6824", ",", "6842", ",", 
     "6848", ",", "6862", ",", "6873", ",", "6883", ",", "6898", ",", "6910", 
     ",", "6914", ",", "6916", ",", "6918", ",", "6921", ",", "6928", ",", 
     "6933", ",", "6941", ",", "6946", ",", "6992", ",", "6993", ",", "6997", 
     ",", "7031", ",", "7039", ",", "7054", ",", "7057", ",", "7078", ",", 
     "7091", ",", "7094", ",", "7095", ",", "7098", ",", "7106", ",", "7109", 
     ",", "7141", ",", "7144", ",", "7164", ",", "7176", ",", "7188", ",", 
     "7200", ",", "7205", ",", "7219", ",", "7241", ",", "7253", ",", "7262", 
     ",", "7285", ",", "7301", ",", "7310", ",", "7312", ",", "7316", ",", 
     "7322", ",", "7329", ",", "7346", ",", "7353", ",", "7378", ",", "7387", 
     ",", "7388", ",", "7391", ",", "7400", ",", "7410", ",", "7430", ",", 
     "7435", ",", "7444", ",", "7445", ",", "7456", ",", "7476", ",", "7479", 
     ",", "7481", ",", "7486", ",", "7495", ",", "7501", ",", "7516", ",", 
     "7526", ",", "7535", ",", "7555", ",", "7556", ",", "7563", ",", "7566", 
     ",", "7569", ",", "7586", ",", "7612", ",", "7625", ",", "7640", ",", 
     "7664", ",", "7677", ",", "7687", ",", "7688", ",", "7694", ",", "7714", 
     ",", "7723", ",", "7763", ",", "7770", ",", "7795", ",", "7810", ",", 
     "7829", ",", "7846", ",", "7848", ",", "7863", ",", "7891", ",", "7902", 
     ",", "7919", ",", "7927", ",", "7932", ",", "7936", ",", "7969", ",", 
     "7984", ",", "8005", ",", "8008", ",", "8037", ",", "8038", ",", "8044", 
     ",", "8048", ",", "8055", ",", "8057", ",", "8058", ",", "8076", ",", 
     "8082", ",", "8096", ",", "8127", ",", "8131", ",", "8173", ",", "8175", 
     ",", "8179", ",", "8189", ",", "8200", ",", "8204", ",", "8205", ",", 
     "8211", ",", "8215", ",", "8216", ",", "8219", ",", "8245", ",", "8259", 
     ",", "8261", ",", "8263", ",", "8267", ",", "8303", ",", "8306", ",", 
     "8318", ",", "8323", ",", "8336", ",", "8350", ",", "8366", ",", "8371", 
     ",", "8373", ",", "8399", ",", "8400", ",", "8426", ",", "8434", ",", 
     "8438", ",", "8444", ",", "8446", ",", "8447", ",", "8448", ",", "8453", 
     ",", "8455", ",", "8462", ",", "8463", ",", "8466", ",", "8481", ",", 
     "8493", ",", "8494", ",", "8495", ",", "8506", ",", "8519", ",", "8526", 
     ",", "8548", ",", "8558", ",", "8568", ",", "8580", ",", "8584", ",", 
     "8592", ",", "8593", ",", "8597", ",", "8601", ",", "8608", ",", "8612", 
     ",", "8620", ",", "8624", ",", "8631", ",", "8655", ",", "8669", ",", 
     "8694", ",", "8703", ",", "8706", ",", "8720", ",", "8728", ",", "8734", 
     ",", "8737", ",", "8765", ",", "8770", ",", "8771", ",", "8782", ",", 
     "8790", ",", "8796", ",", "8797", ",", "8800", ",", "8804", ",", "8816", 
     ",", "8829", ",", "8831", ",", "8841", ",", "8869", ",", "8888", ",", 
     "8896", ",", "8904", ",", "8908", ",", "8933", ",", "8998", ",", "9006", 
     ",", "9016", ",", "9018", ",", "9042", ",", "9044", ",", "9057", ",", 
     "9059", ",", "9070", ",", "9084", ",", "9098", ",", "9103", ",", "9116", 
     ",", "9120", ",", "9121", ",", "9140", ",", "9163", ",", "9174", ",", 
     "9178", ",", "9180", ",", "9185", ",", "9200", ",", "9204", ",", "9210", 
     ",", "9214", ",", "9220", ",", "9257", ",", "9282", ",", "9288", ",", 
     "9297", ",", "9309", ",", "9314", ",", "9327", ",", "9353", ",", "9371", 
     ",", "9373", ",", "9381", ",", "9402", ",", "9424", ",", "9431", ",", 
     "9438", ",", "9485", ",", "9486", ",", "9492", ",", "9506", ",", "9511", 
     ",", "9512", ",", "9515", ",", "9521", ",", "9541", ",", "9542", ",", 
     "9574", ",", "9576", ",", "9577", ",", "9591", ",", "9597", ",", "9602", 
     ",", "9604", ",", "9616", ",", "9636", ",", "9648", ",", "9652", ",", 
     "9657", ",", "9662", ",", "9682", ",", "9697", ",", "9698", ",", "9711", 
     ",", "9723", ",", "9728", ",", "9730", ",", "9732", ",", "9747", ",", 
     "9753", ",", "9775", ",", "9792", ",", "9814", ",", "9823", ",", "9825", 
     ",", "9833", ",", "9834", ",", "9850", ",", "9893", ",", "9910", ",", 
     "9939", ",", "9959", ",", "9960", ",", "9973", ",", "9982", ",", "9983", 
     ",", "9986"}], "}"}]}], "}"}]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{3.7843249103398027`*^9, 3.784397898217911*^9, 
  3.784440236963928*^9, 3.7844547929092817`*^9, 3.7844605004637384`*^9, 
  3.7844606485834055`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"4fd3bd59-d9ad-4db7-88bc-9b87a2df5bd1"]
}, Open  ]],

Cell[TextData[StyleBox["Sorting 10,000 Random Values:", "Subsection",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.784309730485632*^9, 3.7843097427723646`*^9}, 
   3.7843361767457952`*^9},ExpressionUUID->"2b5d630f-d59c-4cbc-a115-\
ac10865e2d5b"],

Cell[BoxData[{
 RowBox[{"ClearSystemCache", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectionsort10000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"selectionSort", "[", "randomvalues10000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"insertionsort10000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"insertionSort", "[", "randomvalues10000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bubblesort10000", "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"bubbleSort", "[", "randomvalues10000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quicksort10000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"quickSort", "[", "randomvalues10000", "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.784309479079906*^9, 3.784309504879323*^9}, {
  3.784460656538375*^9, 3.7844606583922834`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4cacea48-f4c4-482d-a19f-cd73aefa188b"],

Cell[TextData[StyleBox["Sorting 50,000 Random Values:", "Subsection",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.7843097454115095`*^9, 3.784309763608797*^9}, 
   3.784336180569416*^9},ExpressionUUID->"961a83f1-7bff-4569-b2e5-\
1054283ba7fd"],

Cell[BoxData[
 RowBox[{"ClearSystemCache", "[", "]"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"bd736e36-7cf6-4fec-a8fa-377ab1890e39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"selectionsort50000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"selectionSort", "[", "randomvalues50000", "]"}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Sorting", " ", "50"}], ",", 
    RowBox[{
    "000", " ", "values", " ", "takes", " ", "more", " ", "time", " ", 
     "compared", " ", "with", " ", "other", " ", "data", " ", 
     RowBox[{"range", "."}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7843980526186433`*^9, 3.7843980741821327`*^9}, {
  3.784440675346315*^9, 3.7844406767533007`*^9}, {3.7844667672251244`*^9, 
  3.7844668038608932`*^9}, {3.7844668660812464`*^9, 
  3.784466890427088*^9}},ExpressionUUID->"f974c3db-1f52-4c56-a9f5-\
5f2096b11ccc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"insertionsort50000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"insertionSort", "[", "randomvalues50000", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"09062be5-c192-40e6-9f6f-62cd4357124f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bubblesort50000", "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"bubbleSort", "[", "randomvalues50000", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7843980699314976`*^9, 3.7843980846160464`*^9}, {
  3.7844667557105427`*^9, 
  3.784466765100853*^9}},ExpressionUUID->"5aca3858-74ec-4961-98a8-\
329a18df3e7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"quicksort50000", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"quickSort", "[", "randomvalues50000", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"3f3fa0dd-4485-4403-810b-fd43f850f648"],

Cell[CellGroupData[{

Cell[BoxData["selectionsort50000"], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"29eab913-7e10-48da-acf6-5eb535fd532c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"1909.15625`", ",", 
           RowBox[{"{", 
            RowBox[{
            "7", ",", "61", ",", "74", ",", "108", ",", "120", ",", "174", 
             ",", "190", ",", "196", ",", "225", ",", "244", ",", "265", ",", 
             "318", ",", "329", ",", "359", ",", "368", ",", "374", ",", 
             "402", ",", "412", ",", "416", ",", "440", ",", "463", ",", 
             "497", ",", "525", ",", "541", ",", "550", ",", "592", ",", 
             "599", ",", "613", ",", "640", ",", "663", ",", "669", ",", 
             "676", ",", "719", ",", "722", ",", "724", ",", "838", ",", 
             "844", ",", "858", ",", "922", ",", "929", ",", "973", ",", 
             "1000", ",", "1022", ",", "1028", ",", "1037", ",", "1046", ",", 
             "1058", ",", "1064", ",", "1102", ",", "1149", ",", "1181", ",", 
             "1221", ",", "1284", ",", "1285", ",", "1291", ",", "1292", ",", 
             "1307", ",", "1329", ",", "1346", ",", "1350", ",", "1356", ",", 
             "1401", ",", "1414", ",", 
             TemplateBox[{"49874"},
              "OutputSizeLimit`Skeleton"], ",", "998778", ",", "998802", ",", 
             "998804", ",", "998855", ",", "998856", ",", "998880", ",", 
             "998892", ",", "998897", ",", "998913", ",", "998928", ",", 
             "998932", ",", "998953", ",", "998986", ",", "999130", ",", 
             "999140", ",", "999155", ",", "999156", ",", "999184", ",", 
             "999189", ",", "999207", ",", "999209", ",", "999227", ",", 
             "999229", ",", "999245", ",", "999258", ",", "999290", ",", 
             "999293", ",", "999298", ",", "999316", ",", "999349", ",", 
             "999362", ",", "999368", ",", "999398", ",", "999418", ",", 
             "999440", ",", "999470", ",", "999472", ",", "999528", ",", 
             "999531", ",", "999537", ",", "999540", ",", "999560", ",", 
             "999569", ",", "999570", ",", "999576", ",", "999591", ",", 
             "999604", ",", "999615", ",", "999640", ",", "999643", ",", 
             "999646", ",", "999648", ",", "999666", ",", "999667", ",", 
             "999704", ",", "999714", ",", "999722", ",", "999740", ",", 
             "999817", ",", "999849", ",", "999907", ",", "999923", ",", 
             "999938"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 21817874987977414361, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 21817874987977414361, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 27, 21817874987977414361, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[21817874987977414361 === $SessionID, 
   Out[27], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.784327341909268*^9, 3.784443467818539*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"14eec7a5-55e1-4f58-b27a-895cbe675ce7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["insertionsort50000"], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"701a72f1-9317-414c-8072-28ead41d6bd1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"1621.546875`", ",", 
           RowBox[{"{", 
            RowBox[{
            "7", ",", "61", ",", "74", ",", "108", ",", "120", ",", "174", 
             ",", "190", ",", "196", ",", "225", ",", "244", ",", "265", ",", 
             "318", ",", "329", ",", "359", ",", "368", ",", "374", ",", 
             "402", ",", "412", ",", "416", ",", "440", ",", "463", ",", 
             "497", ",", "525", ",", "541", ",", "550", ",", "592", ",", 
             "599", ",", "613", ",", "640", ",", "663", ",", "669", ",", 
             "676", ",", "719", ",", "722", ",", "724", ",", "838", ",", 
             "844", ",", "858", ",", "922", ",", "929", ",", "973", ",", 
             "1000", ",", "1022", ",", "1028", ",", "1037", ",", "1046", ",", 
             "1058", ",", "1064", ",", "1102", ",", "1149", ",", "1181", ",", 
             "1221", ",", "1284", ",", "1285", ",", "1291", ",", "1292", ",", 
             "1307", ",", "1329", ",", "1346", ",", "1350", ",", "1356", ",", 
             "1401", ",", "1414", ",", 
             TemplateBox[{"49874"},
              "OutputSizeLimit`Skeleton"], ",", "998778", ",", "998802", ",", 
             "998804", ",", "998855", ",", "998856", ",", "998880", ",", 
             "998892", ",", "998897", ",", "998913", ",", "998928", ",", 
             "998932", ",", "998953", ",", "998986", ",", "999130", ",", 
             "999140", ",", "999155", ",", "999156", ",", "999184", ",", 
             "999189", ",", "999207", ",", "999209", ",", "999227", ",", 
             "999229", ",", "999245", ",", "999258", ",", "999290", ",", 
             "999293", ",", "999298", ",", "999316", ",", "999349", ",", 
             "999362", ",", "999368", ",", "999398", ",", "999418", ",", 
             "999440", ",", "999470", ",", "999472", ",", "999528", ",", 
             "999531", ",", "999537", ",", "999540", ",", "999560", ",", 
             "999569", ",", "999570", ",", "999576", ",", "999591", ",", 
             "999604", ",", "999615", ",", "999640", ",", "999643", ",", 
             "999646", ",", "999648", ",", "999666", ",", "999667", ",", 
             "999704", ",", "999714", ",", "999722", ",", "999740", ",", 
             "999817", ",", "999849", ",", "999907", ",", "999923", ",", 
             "999938"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 21817874987977414361, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 21817874987977414361, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 21817874987977414361, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[21817874987977414361 === $SessionID, 
   Out[31], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7843286590959215`*^9, 3.7844498689074945`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8fb92895-061d-4fe2-9ced-bcf8cced9abe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["bubblesort50000"], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"b27aa617-75a1-4a3d-9898-6ac9d5d6d14a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"4670.828125`", ",", 
           RowBox[{"{", 
            RowBox[{
            "6", ",", "26", ",", "51", ",", "58", ",", "60", ",", "89", ",", 
             "93", ",", "95", ",", "156", ",", "174", ",", "184", ",", "207", 
             ",", "236", ",", "278", ",", "294", ",", "302", ",", "360", ",", 
             "385", ",", "434", ",", "474", ",", "517", ",", "529", ",", 
             "580", ",", "636", ",", "645", ",", "655", ",", "677", ",", 
             "680", ",", "711", ",", "719", ",", "720", ",", "769", ",", 
             "770", ",", "833", ",", "838", ",", "867", ",", "915", ",", 
             "916", ",", "921", ",", "924", ",", "947", ",", "957", ",", 
             "971", ",", "982", ",", "989", ",", "1003", ",", "1026", ",", 
             "1055", ",", "1063", ",", "1073", ",", "1090", ",", "1150", ",", 
             "1163", ",", "1177", ",", "1192", ",", "1225", ",", "1247", ",", 
             "1267", ",", "1292", ",", "1342", ",", "1345", ",", "1379", ",", 
             "1382", ",", "1392", ",", 
             TemplateBox[{"49872"},
              "OutputSizeLimit`Skeleton"], ",", "998721", ",", "998731", ",", 
             "998735", ",", "998763", ",", "998826", ",", "998831", ",", 
             "998845", ",", "998852", ",", "998865", ",", "998885", ",", 
             "998920", ",", "998927", ",", "998945", ",", "998952", ",", 
             "998985", ",", "998986", ",", "999024", ",", "999030", ",", 
             "999036", ",", "999095", ",", "999097", ",", "999106", ",", 
             "999114", ",", "999115", ",", "999129", ",", "999141", ",", 
             "999161", ",", "999216", ",", "999235", ",", "999262", ",", 
             "999281", ",", "999353", ",", "999356", ",", "999370", ",", 
             "999391", ",", "999427", ",", "999496", ",", "999506", ",", 
             "999514", ",", "999517", ",", "999526", ",", "999563", ",", 
             "999600", ",", "999606", ",", "999623", ",", "999640", ",", 
             "999655", ",", "999687", ",", "999692", ",", "999716", ",", 
             "999719", ",", "999726", ",", "999752", ",", "999810", ",", 
             "999815", ",", "999844", ",", "999861", ",", "999873", ",", 
             "999887", ",", "999895", ",", "999932", ",", "999941", ",", 
             "999951", ",", "999959"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 21818005396707004061, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 21818005396707004061, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 56, 21818005396707004061, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[21818005396707004061 === $SessionID, 
   Out[56], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.784332661758857*^9, 3.784449865803685*^9, 
  3.784472150019495*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"45e0ec21-bdf1-4a2e-90d5-7984bc6e094d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["quicksort50000"], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"69c6747a-9419-4194-8214-9d30928bd5fc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"626.890625`", ",", 
           RowBox[{"{", 
            RowBox[{
            "7", ",", "61", ",", "74", ",", "108", ",", "120", ",", "174", 
             ",", "190", ",", "196", ",", "225", ",", "244", ",", "265", ",", 
             "318", ",", "329", ",", "359", ",", "368", ",", "374", ",", 
             "402", ",", "412", ",", "416", ",", "440", ",", "463", ",", 
             "497", ",", "525", ",", "541", ",", "550", ",", "592", ",", 
             "599", ",", "613", ",", "640", ",", "663", ",", "669", ",", 
             "676", ",", "719", ",", "722", ",", "724", ",", "838", ",", 
             "844", ",", "858", ",", "922", ",", "929", ",", "973", ",", 
             "1000", ",", "1022", ",", "1028", ",", "1037", ",", "1046", ",", 
             "1058", ",", "1064", ",", "1102", ",", "1149", ",", "1181", ",", 
             "1221", ",", "1284", ",", "1285", ",", "1291", ",", "1292", ",", 
             "1307", ",", "1329", ",", "1346", ",", "1350", ",", "1356", ",", 
             "1401", ",", "1414", ",", 
             TemplateBox[{"49874"},
              "OutputSizeLimit`Skeleton"], ",", "998778", ",", "998802", ",", 
             "998804", ",", "998855", ",", "998856", ",", "998880", ",", 
             "998892", ",", "998897", ",", "998913", ",", "998928", ",", 
             "998932", ",", "998953", ",", "998986", ",", "999130", ",", 
             "999140", ",", "999155", ",", "999156", ",", "999184", ",", 
             "999189", ",", "999207", ",", "999209", ",", "999227", ",", 
             "999229", ",", "999245", ",", "999258", ",", "999290", ",", 
             "999293", ",", "999298", ",", "999316", ",", "999349", ",", 
             "999362", ",", "999368", ",", "999398", ",", "999418", ",", 
             "999440", ",", "999470", ",", "999472", ",", "999528", ",", 
             "999531", ",", "999537", ",", "999540", ",", "999560", ",", 
             "999569", ",", "999570", ",", "999576", ",", "999591", ",", 
             "999604", ",", "999615", ",", "999640", ",", "999643", ",", 
             "999646", ",", "999648", ",", "999666", ",", "999667", ",", 
             "999704", ",", "999714", ",", "999722", ",", "999740", ",", 
             "999817", ",", "999849", ",", "999907", ",", "999923", ",", 
             "999938"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 21817874987977414361, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 21817874987977414361, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 21817874987977414361, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[21817874987977414361 === $SessionID, 
   Out[25], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{3.784333244417385*^9, 3.784441328706091*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"444c17bd-8aa5-4a17-9984-d16eb0ec20c2"]
}, Open  ]],

Cell[TextData[StyleBox["Table of time taken by each Algorithm for all the \
list range", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.7843341777549086`*^9, 3.7843342148785295`*^9}, {
  3.784336237192496*^9, 3.7843362602864094`*^9}, {3.784456537175463*^9, 
  3.7844565381588073`*^9}},ExpressionUUID->"ab5ad36a-a564-4113-80e2-\
0737e6f49016"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<10 Random Values\>\"", ",", 
       RowBox[{"selectionsort10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"insertionsort10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bubblesort10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"quicksort10", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<1000 Random Values\>\"", ",", 
       RowBox[{"selectionsort1000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"insertionsort1000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bubblesort1000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"quicksort1000", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<10,000 Random Values\>\"", ",", 
       RowBox[{"selectionsort10000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"insertionsort10000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bubblesort10000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"quicksort10000", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<50,000 Random Values\>\"", ",", 
       RowBox[{"selectionsort50000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"insertionsort50000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bubblesort50000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"quicksort50000", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<50,000 Random Values\>\"", ",", "1664.484375`", ",", 
        "1288.53125`", ",", "3963.515625`", ",", "551.234375`"}], "}"}], 
      "}"}], ";", " ", 
     RowBox[{
     "The", " ", "values", " ", "vary", " ", "based", " ", "on", " ", "the", 
      " ", "use", " ", "of", " ", "internal", " ", "system", " ", 
      "caches"}]}], ",", 
    RowBox[{
    "which", " ", "can", " ", "be", " ", "cleared", " ", "with", " ", "clear",
      " ", "system", " ", "cache"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7843097721307735`*^9, 3.7843099704305654`*^9}, {
   3.7843100125044947`*^9, 3.784310026505869*^9}, {3.78431024349436*^9, 
   3.784310273413282*^9}, {3.784310314121479*^9, 3.784310334223038*^9}, {
   3.7843332588028927`*^9, 3.784333274760235*^9}, 3.784440120545585*^9, {
   3.78445730411617*^9, 3.784457331525875*^9}, {3.784457447082048*^9, 
   3.7844574822793922`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"694d4e99-9940-4b81-a612-6cb28da79373"],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.7843100358514585`*^9, 3.784310036767829*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"42bb8d33-38f9-49d7-ab17-0f74d7690b62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"10 Random Values\"\>", ",", "0.`", ",", "0.`", ",", "0.`", 
     ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1000 Random Values\"\>", ",", "0.703125`", ",", "0.5625`", 
     ",", "1.5`", ",", "0.28125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"10,000 Random Values\"\>", ",", "70.515625`", ",", 
     "56.34375`", ",", "155.546875`", ",", "23.03125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"50,000 Random Values\"\>", ",", "1909.15625`", ",", 
     "1621.546875`", ",", "4117.`", ",", "626.890625`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7843100376981363`*^9, 3.784310281359861*^9, 
  3.784325261850123*^9, 3.7843332834689183`*^9, 3.784452652476958*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"708750b0-3fa9-4835-a160-3ee6cbc1c452"]
}, Open  ]],

Cell["\<\
The time complexity of the lower data range list is approximately equal to \
zero since all the algorithms sort the list with minimal time. But as the \
range increases, the time complexity increases. This become evident from the \
timing difference between the four Algorithms.
\
\>", "Text",
 CellChangeTimes->{{3.784333846650773*^9, 3.7843338588003016`*^9}, {
  3.7843363064402657`*^9, 
  3.7843363068287673`*^9}},ExpressionUUID->"24ead540-dd60-4ce0-93fd-\
def9746b8571"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Count of Random Values\>\"", ",", "\"\<Selection Sort\>\"", ",", 
        "\"\<Insertion Sort\>\"", ",", "\"\<Bubble Sort\>\"", ",", 
        "\"\<Quick Sort\>\""}], "}"}]}], "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", "Center", "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"20", ",", "10", ",", "10", ",", "10"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}], ",", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", ".8"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.784310084219762*^9, 3.7843101242347345`*^9}, {
  3.7843101787520285`*^9, 3.7843101912848663`*^9}, {3.7843105150663986`*^9, 
  3.784310519102378*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"91f297d5-730d-491f-b1e9-9edef315a34e"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"Count of Random Values\"\>", "\<\"Selection Sort\"\>", \
"\<\"Insertion Sort\"\>", "\<\"Bubble Sort\"\>", "\<\"Quick Sort\"\>"},
       {"\<\"10 Random Values\"\>", "0.`", "0.`", "0.`", "0.`"},
       {"\<\"1000 Random Values\"\>", "0.59375`", "0.515625`", "1.34375`", 
        "0.25`"},
       {"\<\"10,000 Random Values\"\>", "61.1875`", "51.984375`", 
        "142.515625`", "21.171875`"},
       {"\<\"50,000 Random Values\"\>", "1761.171875`", "1419.875`", 
        "4670.828125`", "552.5625`"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {20, 10, 10, 10}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}},
      GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
     "Grid"], TextForm]], "InlineText",ExpressionUUID->
   "4c91955c-fd85-4c1d-a715-319f14e76caa"],
  Text[
   Grid[{{
     "Count of Random Values", "Selection Sort", "Insertion Sort", 
      "Bubble Sort", "Quick Sort"}, {"10 Random Values", 0., 0., 0., 0.}, {
     "1000 Random Values", 0.59375, 0.515625, 1.34375, 0.25}, {
     "10,000 Random Values", 61.1875, 51.984375, 142.515625, 21.171875}, {
     "50,000 Random Values", 1761.171875, 1419.875, 4670.828125, 552.5625}}, 
    Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {Center}, 
    ItemSize -> {{20, 10, 10, 10}}, Frame -> RGBColor[0.2, 0.2, 0.2], 
    ItemStyle -> 14, Spacings -> {Automatic, 0.8}]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7843101556684694`*^9, 3.784310192586076*^9}, 
   3.7843102864606857`*^9, {3.7843103232012367`*^9, 3.78431033695541*^9}, 
   3.7843105203380404`*^9, 3.7843252726292453`*^9, 3.7843332898677998`*^9, {
   3.7843363182302637`*^9, 3.7843363189538937`*^9}, 3.784452662253897*^9, 
   3.7844721857493296`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"8c40eca2-2ac5-4a89-a6ab-0df554b1390b"]
}, Open  ]],

Cell["\<\
Manipulate for calculating the time range among the four Algorithms based on \
interactive range up to 5000 and its random samples.\
\>", "Text",
 CellChangeTimes->{{3.784337957734969*^9, 
  3.7843380446074305`*^9}},ExpressionUUID->"0417d68b-60a1-4247-9e94-\
23e4824e83e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"selectionSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"insertionSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"bubbleSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"quickSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"F1", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<Range\>\""}], "}"}], ",", "1", ",", 
     "5000", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "\"\<Random Samples\>\""}], "}"}], ",", "1",
      ",", 
     RowBox[{"i", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"f64144c4-c315-46d5-9456-49e6422e564a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 2302, $CellContext`j$$ = 670, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "Range"}, 1, 5000, 1}, {{
       Hold[$CellContext`j$$], 1, "Random Samples"}, 1, 
      Dynamic[$CellContext`i$$ - 1], 1}}, Typeset`size$$ = {252., {3., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$362882$$ = 0, $CellContext`j$362883$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1, $CellContext`j$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$362882$$, 0], 
        Hold[$CellContext`j$$, $CellContext`j$362883$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`F1[$CellContext`i$$, $CellContext`j$$], 
      "Specifications" :> {{{$CellContext`i$$, 1, "Range"}, 1, 5000, 
         1}, {{$CellContext`j$$, 1, "Random Samples"}, 1, 
         Dynamic[$CellContext`i$$ - 1], 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{339., {66., 72.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.784452672394661*^9, 3.7844722077686634`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"5f01df11-9403-40ea-add7-130ffeb79853"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.784453249050572*^9, 
  3.784453261726655*^9}},ExpressionUUID->"6a89cb65-955e-406f-91c1-\
ea2b70312ba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"selectionsort1000", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"insertionsort1000", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"bubblesort1000", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"quicksort1000", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Selection Sort\>\"", ",", "\"\<Insertion Sort\>\"", ",", 
      "\"\<Bubble Sort\>\"", ",", "\"\<Quick Sort\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Time Graph of 1000 Random Values\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.784310617274455*^9, 3.7843106965285344`*^9}, {
  3.7843363990154963`*^9, 3.784336455474044*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"60479cdf-4471-494d-aa9c-b303b56ec83a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.36113619810633646`, 0.}, {4.951201747997087, 
     0.}}]}, {{}, {{}, {{}, {
       {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
        0.6719999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
              0.59375}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{45.1014731675901, 110.06990381600188`}, {
             15.248236031992349`, 104.11903000904096`}}],
           StatusArea[#, 0.59375]& ,
           TagBoxNote->"0.59375"],
          StyleBox["0.59375`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.59375, {}], "Tooltip"]& ]}, 
       {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{Opacity[
        0.6719999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
              0.515625}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.54227646078571`, 181.51070710919748`}, {
             26.875972081604004`, 104.11903000904096`}}],
           StatusArea[#, 0.515625]& ,
           TagBoxNote->"0.515625"],
          StyleBox["0.515625`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.515625, {}], "Tooltip"]& ]}, 
       {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
        Opacity[0.6719999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{2.7439912600145666`, 0.}, {3.64639475600874, 
              1.34375}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{187.98307975398131`, 
             252.9515104023931}, {-96.37803004427957, 104.11903000904096`}}],
           StatusArea[#, 1.34375]& ,
           TagBoxNote->"1.34375"],
          StyleBox["1.34375`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.34375, {}], "Tooltip"]& ]}, 
       {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
        0.6719999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             
             RectangleBox[{3.7439912600145666`, 0.}, {4.64639475600874, 0.25},
               "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{259.42388304717696`, 324.3923136955887}, {
             66.41027465028364, 104.11903000904096`}}],
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.36113619810633646`, 0.}, {5.036906919155134, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.7439912600145666, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 0.}]}],
          LineBox[{{4.64639475600874, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.64639475600874, 
            0.}]}], {{}, {}, {}, {}, {
           LineBox[{{1.64639475600874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.64639475600874, 0.}]}],
            LineBox[{{1.7439912600145666`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.7439912600145666`, 
              0.}]}], LineBox[{{2.64639475600874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.64639475600874, 0.}]}],
            LineBox[{{2.7439912600145666`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.7439912600145666`, 
              0.}]}], LineBox[{{3.64639475600874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.64639475600874, 0.}]}],
            LineBox[{{3.7439912600145666`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.7439912600145666`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Selection Sort\"\>", 
           Offset[{0, -2}, {1.1951930080116533, 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["\<\"Insertion Sort\"\>", 
           Offset[{0, -2}, {2.1951930080116533, 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["\<\"Bubble Sort\"\>", 
           Offset[{0, -2}, {3.1951930080116533, 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["\<\"Quick Sort\"\>", 
           Offset[{0, -2}, {4.195193008011653, 0.}], {0, 1}, Automatic, {1, 
           0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.36113619810633646`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"Time Graph of 1000 Random Values\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.7843106304307165`*^9, 3.7843106475757904`*^9}, {
   3.7843106899009886`*^9, 3.78431071205416*^9}, 3.784325281202338*^9, 
   3.7843332961399813`*^9, 3.7843364573368983`*^9, 3.784452697603651*^9, 
   3.7844722160355434`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"52c29afc-ff7e-46c2-bf11-2476a258eb40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], "}"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Selection Sort\>\"", ",", "\"\<Insertion Sort\>\"", ",", 
        "\"\<Bubble Sort\>\"", ",", "\"\<Quick Sort\>\""}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Sorting Algorithms\>\"", ",", "\"\<Time\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ChartBaseStyle", "\[Rule]", 
      RowBox[{"EdgeForm", "[", "Dashed", "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<Sorting Algorithm\>\""}], "}"}], ",", 
     "1", ",", "4", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\harshie\\\\Documents\\\\UCD\\\\Mathematica\\\\\
ProjectV1\\\\19200349\\\\SortingBarPlot\>\"", ",", "%"}], "]"}], ";", 
    RowBox[{
    "This", " ", "will", " ", "export", " ", "the", " ", "below", " ", "Bar", 
     " ", "Plot", " ", "to", " ", "a", " ", "GIF", " ", "format", " ", "to", 
     " ", "the", " ", "suggested", " ", 
     RowBox[{"location", "."}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7843123336148443`*^9, 3.784312372745209*^9}, {
   3.7843125042303295`*^9, 3.784312533719969*^9}, 3.784312589834894*^9, {
   3.784312638834929*^9, 3.7843126719095964`*^9}, {3.784457023875499*^9, 
   3.784457157279998*^9}, {3.7844645957802267`*^9, 3.7844645982219915`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9b7687f0-db90-429f-bf07-9efd40faedb2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "Sorting Algorithm"}, 1, 4, 1}}, 
    Typeset`size$$ = {360., {123., 129.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$365770$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$365770$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> BarChart[{
         Part[$CellContext`data, $CellContext`i$$, 
          Span[2, 5]]}, 
        ChartLabels -> {
         "Selection Sort", "Insertion Sort", "Bubble Sort", "Quick Sort"}, 
        Axes -> True, Frame -> True, 
        FrameLabel -> {"Sorting Algorithms", "Time"}, ChartBaseStyle -> 
        EdgeForm[Dashed], PlotLabel -> Part[
          Part[$CellContext`data, $CellContext`i$$], 1]], 
      "Specifications" :> {{{$CellContext`i$$, 1, "Sorting Algorithm"}, 1, 4, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {170., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7843123776605787`*^9, 3.7843125353357973`*^9, 
  3.7843125991849284`*^9, 3.7843126425568953`*^9, 3.7843126732583914`*^9, 
  3.7843253138061047`*^9, 3.784333312338685*^9, 3.7844527022791452`*^9, 
  3.784472220488722*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"96ae0f83-5604-4ca8-8188-32ccbe5b2f84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F2", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"selectionSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"insertionSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"bubbleSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"quickSort", "[", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "[", "x", "]"}], ",", "y"}], "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"F2", "[", 
        RowBox[{"i", ",", "j"}], "]"}], "[", 
       RowBox[{"[", "k", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"ExtentSize", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<TIME COMPLEXITY CHART\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "\"\<Range\>\""}], "}"}], ",", "1", ",", 
      "1500", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "\"\<Random Samples\>\""}], "}"}], ",", 
      "1", ",", 
      RowBox[{"i", "-", "1"}], ",", "1"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "plotting", " ", "may", " ", "take", " ", "some", " ", "time", 
    " ", "as", " ", "the", " ", "range", " ", "and", " ", "random", " ", 
    "samples", " ", "increase"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7843173677697134`*^9, 3.784317379104821*^9}, {
   3.784317581782529*^9, 3.7843175864441385`*^9}, {3.784317702444991*^9, 
   3.7843177353721743`*^9}, {3.784317783178275*^9, 3.7843178120508757`*^9}, {
   3.784317874376422*^9, 3.7843179241157413`*^9}, {3.7843181722356887`*^9, 
   3.7843182033658915`*^9}, {3.7843182430967965`*^9, 
   3.7843182519051085`*^9}, {3.784318476809167*^9, 3.7843184770221043`*^9}, {
   3.784334252180725*^9, 3.7843342972062936`*^9}, {3.784334415870942*^9, 
   3.7843344198264027`*^9}, {3.7843344633539424`*^9, 
   3.7843344665314403`*^9}, {3.7843345138946667`*^9, 
   3.7843345174022846`*^9}, {3.7843345928414345`*^9, 
   3.7843345931875086`*^9}, {3.784334789988696*^9, 3.7843348186160235`*^9}, {
   3.784336812654111*^9, 3.784336814608075*^9}, {3.784336900468794*^9, 
   3.7843369013548365`*^9}, {3.784337005283312*^9, 3.7843370075585394`*^9}, {
   3.784337042038839*^9, 3.78433704278996*^9}, {3.7843371934020953`*^9, 
   3.784337194084897*^9}, {3.7843372440572586`*^9, 3.784337245910637*^9}, {
   3.7843374294953117`*^9, 3.784337430307333*^9}, {3.7843375532403035`*^9, 
   3.7843375689181128`*^9}, {3.7844529048469057`*^9, 
   3.7844529050423827`*^9}, {3.784452976258023*^9, 3.784452992730902*^9}, 
   3.7844530677824364`*^9, 3.7844531137613783`*^9, {3.7844558597787285`*^9, 
   3.7844559194251747`*^9}, 3.7844646559219236`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"06b9ba40-2a61-41e4-8269-3f48fcd5da95"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1484, $CellContext`j$$ = 1365, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "Range"}, 1, 1500, 1}, {{
       Hold[$CellContext`j$$], 1, "Random Samples"}, 1, 
      Dynamic[$CellContext`i$$ - 1], 1}}, Typeset`size$$ = {
    360., {121., 126.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$365977$$ = 
    0, $CellContext`j$365978$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1, $CellContext`j$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$365977$$, 0], 
        Hold[$CellContext`j$$, $CellContext`j$365978$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DiscretePlot[
        Part[
         $CellContext`F2[$CellContext`i$$, $CellContext`j$$], \
$CellContext`k], {$CellContext`k, 1, 4}, ExtentSize -> All, PlotMarkers -> 
        Automatic, PlotLabel -> "TIME COMPLEXITY CHART", Axes -> True, 
        PlotRange -> {{0, 5}, {0, 3}}], 
      "Specifications" :> {{{$CellContext`i$$, 1, "Range"}, 1, 1500, 
         1}, {{$CellContext`j$$, 1, "Random Samples"}, 1, 
         Dynamic[$CellContext`i$$ - 1], 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {182., 188.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.784453163637062*^9, 3.7844722266030846`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"9f89f274-eeda-4579-adb7-1dac9fea0f16"]
}, Open  ]],

Cell["\<\
From the above discrete plot, we can compare the result with the tabular \
representation of the time complexity of all the sorting algorithms in the \
Data Structure.\
\>", "Text",
 CellChangeTimes->{{3.7844532760014524`*^9, 
  3.784453353467446*^9}},ExpressionUUID->"775d0d23-5204-49af-81a1-\
b31d917cb06e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\harshie\\\\Documents\\\\UCD\\\\Mathematica\\\\ProjectV1\
\\\\19200349\\\\TimeComplexityofAlgorithms.JPG\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7844521840979795`*^9, 3.784452188664793*^9}, {
  3.7844522231270337`*^9, 3.7844522792029953`*^9}, {3.78445240002292*^9, 
  3.7844524169985514`*^9}, {3.7844524582112694`*^9, 3.784452493961624*^9}, {
  3.7844525416430435`*^9, 3.784452583700026*^9}, {3.7844664751269345`*^9, 
  3.784466478783278*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c9b994f0-5197-4df1-bee0-ffb698b75d23"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hYsCx9//aLe3Rk06tnf7whmzsourmVA2rF20futB4R2DNdE+YYxdyhdIvXoW
xNlD1Kb33n592cKIfp9+GbhgPR52137+RtdpyyOFZu/zxqvPvPZWcHhYt//4
3ScjA0FgQ8YH9Xru3ZDwiV2e7Lx2zU4m6DvvvXT/g70/fu8vCXHHnnr4z1t3
nTp+dFePrp3e+mR0SlJ8+NRBDz7Ra/q8le++2u3tNz/wMDFjqt9vf/+7ObND
+7/zWqcne40PnDZp1CeP/enhSzF3sIUwOWhAqBwCMNGRgD1I0s2QHfIEBxvr
68o7P9Nl1/69Ronkq4d/++//lltetXxh6P+678+zQmYO7PvmQ52eHR04M3js
oAf+8PuTt1I1p7X/x2+OGOcfERH+7PNv3ErNwz52ZFHH4AH9+g31My7ldDRF
blhXWV536OCuzo92mTVr0uuvvPZV/zFuTj95942nHu4RNi/0Ly8/3q3rm5OC
lw786oXHO3UqrbFHb4n43f/449gpAV8M+PzZp7oWVTUc2rf+ka7P2XW9IPna
S71eD5m3eMr4ke+8+0mzqq2dH/x8727nrt+874Guly9eys08+2//+6krMWlH
1sy778FnPpm5MCXmXI8HHlgVddijNT7d+YGQJdEChxu+v1fYxD85vsWiFMWY
p8Wc7fREF7tTORi9q+vLfS0eAl58n9d6zl6/rSTpVKf7/3QjvxxOmdb3wyGT
ZlfUZXR74InjF3Ngz6ZVi5/v8Xajo77vx68GTF8LstFkzendtfvuQ1fh6Fuv
9Fy27SRsBI167+NB42Aj5erxzo88W2RxL5o94a2+n8KetPPH73v4uaLaZiGq
ez/17IZtZ2Gnh6oGi3Khf6/zb6J9gos2E5Z0jTO9urL0saef2bU/mnPsL02/
vv+JpzqXNDSvWjq353ufQcGsxAv3P/x0SnGl4Lbnnu2+5sCp+ItnHv3jb+Yu
XB65Yf0fH3pyfPAiKAY+kuBNfT56/3P/2Tql1OPCiR4I9uZrXebNWAVb6Um3
Hn7w6ZsFJWO//Chw9AzYc2RzWKdOr9iEsFadf/jP919Lqz62I+zdbm80Yjem
9soTT0TuPnX6RNTDXXs5GFk5a3zXJ3qu3LB1efis//X//fvR64lctX7a76Xf
PvTYpKA1cLXMtMOd7++bllMrmvI7PdZ1Xyo2k5ARowaP8b+Zfr5Tl853ym3C
mBdgop3iWyzKcAoGi5g+5sEnum3ZuSdiVvBv/9D5fMwdEPB3Xnt+zsaolItb
uz3+dIYF+5FCP+k7PGB2Ru6NXg93i81ohiudP7a/25OvVDUUf/jRCyEL9kCZ
hqY7zzzRZe+xm5Q2vPlyz9AVe8F5mTb6vU+G+IHkxJ/d8+SjvTNrnUtnj32t
7+dwKOZA1ENP/yWroom6sl/u0ity61m4KyeRLEqRRTWzZ7RjQQ5pe1mUo7vB
aqsrO3XpHr13lzEJLuvm/kc6PZpf3bB80eyeHwwAIYm9dPDPT3S/U17HHBXP
PtNl7ZHzZ/ftevqh340PnBkwwW966PyDZ29gNwH2TTk+Hzjg/ZFT8ZsYczRX
7I3eWpJT/PZrz+7atIMxUl9e8cwTL+27nTjhsw+mjZkJMnlkXXD3bu/VU16Z
s/eJJx66nt10cltwnx5vVWMXvT7w7TfDVkSdOhX1aI/nrYp7xvCPe3R53m9a
6HT/saHhi2Iy8sFzCps/6le//tetu9BySIrd8eQDA5Iya5xFCc888viWKzdA
NVw7dOT1V17oHzCwz5Bhuncaq4n2jDajS8YAu83a9MYrL77y5gvvvvfp55/0
e+LpTtOmLoUCb7/z4pIV2ypLEh7/w28PHTvrVl1fvfbekIkzG5wN3R97ZtXa
KMrcfhMmv/z2WE1v7tun98zwKBB4W2N8j67PRx+JEaLxtReenTVnO9i70/36
9B86Ca6ZcD66y6M9M+scC2ePe7XfINgTdzD6kaffzauxME/xiz26btuGswLc
OLef4HwSToQpcR0XOLotRE1N1dNduu7fu11Iscy8ffLxJ58pq7WuWDTrtY8G
w860a0cf6PJicrlVOIp69+i2+vit/MRrT//HfzsTkwxHL167UVHXQDgYngpw
8ratkQ8/+lhSUpJOyLKlC/71N78uK6kcNnRQ/y++APk8EH3o0QefT7GUj+3z
0fQxC+D04xtmd+/at4GLqtyz3Z56OD4z9cTO2Z07vZZfXVFdWvbvj3U+ceHm
2ZPRjz/bnXAWOT/4mce71NlAt4uzF6/Cn7KM5Beee/6j4a+++tbnxMNzM84/
8sA78fmVtsqYxx7446ZTcXBjamPee288/j8fun/DvtM4UZWaMt1xoGkoDHv2
7P39fX/Izk4wdq5bv+SB+7qXlVW99kavmdMXwp7FIYGP/enRTwb0ffGp3gP9
UMsf2n2wV6/nX3y1c68X3zp3I0dwz0u9Ok2fvRYOWWri/vxgp817zguhBwf5
//a3z144dix4Qr93PxwAR2+e3fXQv/05s8YyM3h097c+hD3Xd+/49z92y62s
Uz1lnR+9P3LDTtjpImAiq1w4cVaq6dJ3XBiObWVl5Z/+9KddUZuMnfHXjt33
hz+XVjYtDJ/S9YX3YU/chYP/8sCTqWUW4Sh+8rFH5m4+BMbsuvCg+596vufL
b77+zvuJyenAkIri0TWP5nHMmDyh69NPvvzyy8891/vQ4cNwhaSk5Lfeevul
l17o2a33+tV73YJ99srrE4eGwqE9K2Y89ODLjVSUZ5978Hf/OyEp+WT0kgc6
PTtodL+enXu9NXSSzePas3PNg507WZutbmvNqCEjOj39wou9e381ZJjF5RjZ
95OB/Uc1a2Vdnn1hxfz1BRkxv/3Nk9fSsqha+tUnfX/9+FvX4tJBohfPG//7
p3tk11jkjCzTu+o4oAiSl5cXGxtLqANnbBK1sbHqysVb9XUNaWm3crOLKfE0
VhWkxCcXlRb1ffODsUGzDT1aXl5x8dKpipp66Xk7U5JvZheU4RQ+Z8Wt27dL
ahp13eV0NF+5Gl9dVpKfGZ+clqGCpdpQeuvaLYuq5xemxaSmM8qby0uv3oy3
eFxEb4y9fa2spFojOKGZ4qQnt5BrUk10VDAJt9t982ZMTWUxyI+uM5ul+PrN
GJeqlxRn3k5OIyg2lRdj4ppcilCtt2/fyK1qYLgqRE/LKTh3+WqzE7ubdIIz
SqmuymntNDcn++LFi7W1tQKXKqEmttnssCcvtwC2XZymx8Xm3imgTKsrvXMj
JslBhWorvHHtXLPNEb0h/OU3Py4oz755JabUoVHBq8rzbsTFAksLqjKdxiWm
xt26qQtmV9y3Ll2uq21UmDsrvyDpVqKjsSrmemKVpVkQR0Nd7fGb8ZX1VeBV
hYcEvT9wPN60pv/1OjHRvsCk3Bnbug4sygguoNfaliHEOXX8qCFfDfii/2ev
Pv9qYnqWzpmqeGe+AcM5NKKqastFVIHDVcaJGtHvupTq7RJrtS6ZzuSiD1zT
xLh3Ch+hOBWG4S/Vu0zZRAeFXN/pe8GgOzVcsIkrgwy5QGnRqHcREc4dpl6J
AhbVNa+kwX5FA3JCI0AucAI5bp2ZKXdyEFHfFykaUVp8akYVQx51HDLwXnzt
4qmdOr/hkTNa7QIXfrYUpkz1GEtABc4k0eScfLwBl28uqGYsToUN32RS15KQ
MY89+NjJa6lwK0R3CVOmOxCMSWsGl2KgBblymFJjOQglID4oJJqjueHg/t3b
tm6tb2wSOE8FpYpJQ5bimg+CqzcQCq5yAylGISXGomFKVKBmhgVkFAg8Shgn
HmgGuAqK4j+i4hgD1+GrwTplzBfkgfiWSJvokPBNm5QSSISUH87dlFD0QphK
dFyZhGYmhlvA8DhgrXJj+RIyMBTED0YkE2nYGjJD5BFq7PTJOZyLS/Vl3AZC
Qd7As5fXBnmUS+p01QPXyslIPHz0jApiTHQPfBm4RbgynsAh2UYELtTTVZ0B
9XK4oi7JXYdvhE2CV6FMx1gQOleoR3DL+dP7Y27E62hIUBkswpTpjgrmC+8k
P7aEt2mjN5k3pJOxdrglCo60HmQh4g2SgyfqxFuCeA1QI1CP9zLSxcLyRO6R
tmfrV/tgCts9BRn+g8lV8t5V7XKpPDcG9GmLpHFjFrGUzm9LiG9ByfeCC4NH
BQ7Cc0MCNSM4Ci4wYr5iuhGfhAvFkHPvWXJpPzNW0BuBm7zBx3iL0idtfCiP
EFZjS+FGVBS3aYvea5CCAtraCdrXzTFijcDQTOiaeKM5EJy4L6ORYFgwTRjB
wUAZU2wFaGzKpXoy0AP1xX3wXpuzu/YYMGXsXoQ3iB2T5MUNFpMLO7lPIHwB
kdr+/nmQ3UtChnjy8p7uXe0pdIZL6I0wUCi8hhnApeuEC+dR2FXvCdJI8N6a
3PDGRuG8ZUMRHENQKHLNKveGrTDNgw4MH5v5ItIx+dalAiXciW6QAtKj+liU
odBjHDIQLezcBNVLjOmAqlCJPKZzphihoJCAWwxX6jMnsPuJt/IoNWLkeW/n
OwxUEx0T1KBMY8W7JDSkHSq7On0T9aXbIh0ZNAi/ERPiR4Eb2twhKJNWria/
lXsdLLy+0ibgLZURpQw+d8EduWU0P8EUHW+Fy65UI9qDLrzhc70jDdgBgWJP
DPNWaQlCaopzR4fPG/KxKPdyHUg05R6QPKJJRqTc2xdFjVigBKkU5UY1hAZ3
q1SyKMWZ/dQIocsMx160ZVFCW/wrCYNFfcF3zXiM9wqkLYpihZSFBqgMIWdE
B5WhvKUc6tizjsWp4VZ/W8/+oD8v+wrcyKLMkGUZ6NGYQC1albto5VIZagRj
l+o43om2KAYkl6EkW7ruudeCpi0sSoQMPUWxU4DL3gFqbJksasKECRMmTJgw
YcKECRMmTJgwYcKECRMm/u+AaVoIUSRUEyZMmDDxQ/gGhRprK2TCLRMmTJgw
8cP4ti3qwz/QBDZhwoSJjgDfIl+TRU2YMGHCxL2IVtXHvGtczTUCJkyYMPHj
0UqZxloWarKoCRMmTPws0JYfk0VNmDBh4mfghwOymTBhwoSJb4N746J54wC3
7Pyr8TDahA6+B9F2LNVXb+YA68+Dr958tfdTRct3uln/Jn4RGFN9jZjq8Bsj
+WNEH86/P1Uua4EvV8u9BuPZjUojhMh6w4CeZor2H4kWYWNGvRmVSWRiFN/8
8x8vXcbV4HRMImASqYl/OCjVFcWl65qqapoGYmjINuH8e2UYBFWXgBPuTSI1
+FNgli5dVdWW5n/vGuc/FVCBhrQZcqQoikyEgjSoqKpBsD9StAxFZuQC9r0X
Eyb+kWDfYktMGMRBjPVvukgts4INIfcWvidZlHkTJLVJCccYudt8auvyt61G
mUah1Yf99tG2Bb6zTAdA26fz5WT2regxKvMbtv03vP5v9wNIm5aZ7oCJfyQM
8XM668NCpw0cOKL/gGHTp03NyMqCnYyAGLfkSKWajNpOfM2Y6ijte3duW7hw
sTByS3SwRv6DwAyJGKb+4vlzo8eMra5rQDOUoTkkKdDLBhjfnnqMbR0tVb1l
P6LtMkBMjoil78pQjFxNWzmB+Ayt9lrZTObXMcKZk0VzZ0Rt3wNbtRWFE8b5
Z+YVAwEeO3Zw4tTpiqoRxW2co0N51jLoKX9RIz2khCrr8Mj+3aFh4XiIYiK/
X+LRTNyjMJqkrSm915MP9PlwZMSytf0+evWJrl3jCqpkajW9vqG2tqpcYI5d
KG0jzFlYUdHUZIM9Dlvd9GF9X37t3RJLs+QHiknU7pUY6PC4KqcKU+2Dv+j3
n//b/7tt/0nYq9oqaypLrU6FsWZLU31pdYPMUwRVVVleWwdbGnE4assb6x0e
zq2OZjzFaSspq9Q9yAWKgmHmmxqrGi1lmqKW1Fs9kis0TSmrqPQQHXPZEkmk
rD0mT2AyHSSSoEOmIp8x7LW3PxgKz3H79OZf//ffrNp1CvYOH/j+y/2Hy4dT
LE22qppy0ExMYx5XQ21DDVVIs9UudQ8vr6ywWephy+mwh4zp/+yLbxTWN+hc
9akwEyb+ATBY1GVNefmZp44duwnb9WWZv7v/gV0XEmB7w5qFvXp06dm958LF
a6HB15QmTRjZp3uvZ3v0eOX4qa8PRa1+7k+/frhz968mziGYPxJoxUgoeU+A
U7CUeH7ChRdffn3w0NGffPaVgwh7Q2mPp7tt2vM1HJo2pt8X/adAybVbVr/c
u8tz3XrNDl8P9RO1ZP5rvd575aPPVqxa8vXZk2+8+FLv3i98/smApKw8KHx0
z67Hu3Z954Pnv3jnzX7DJgIdpMXGfPjuB126dfly8LDcokpQVwTYm7B2aI0C
9euy75I5kefI+eiwbj3+YiV886qQ//jX+yZNnwNl+rzRY+qG/XB4/9bIns+/
1a3nUwEBM212/U7m7ad6dvnis8HDBw1tbKqfNi2wZ6/nenbvum7X8cPRO3o+
8JsHHu/6ud8UlWktaX9NmPhHwGBRhyXx3V4vf/n5xIgl84d/8f6X/Qc2uknK
zTOdH3nk6xuJyfG3nnzoP67EJW5YPu/xp7q6CDl3ZN+CiHBKtfDAEX/55Kt6
8L4whxpaALQdtu2fB6oDi+qrg0e/8+ngnMz0bk8+cSm9BPaPGTpy8LgwlTe+
1/P30dvPZCcm/Pqpp7++ev5O7K1HHux6Pu7mkchVj9/3+Ow1W3NzU/dGbz18
5FRDQ/3rr701ITjC2ZjR45FO/vNWFRRlDnupR5+v/CzE+cHLPcJD5ldUlr33
4Wcjx4YJ9HAdlLJ2WNGYXA87iShV0cRWSpMPPflY9zv5xWMmjho/cbLf0C+z
83Jf6N5tb1x+beaVB/70YNSRM4XF6T0ee2zlxiMFZem/f/iPowNCbl6/vn/X
hocfuq++sTE+Ps5vxmJdVVaGTH7x3U+rVR0TRX3/qKgJE39zePtFrYnv9Xzn
nbcH+AWMGfzJex992K+ssX7LysAnHnzw1XfeeO3VN//0wNMrth0ryrv1+kuP
ffbVp9vWb6mzOODEeTP83vpkQLPM2gsWEjW6ve4ByHrjtLng/R6PLNqMhlOf
V5+fNH8V7Dy5Z9ebb/W5nHK95zOP1Vc171kz/18ef+r5t95/99UXH/zDI+v3
7zu0btlb3V92yOvkZSeNGDdl9PCBzz77rN/0JdmJO5/98+M3SixwaPXI/h8N
nHy7NLXnY79/o/fbr7z6XOene73zbqBL5xpvJO2zormRERWH4uCTW7Okvfvq
65Hr1775xRe305IDvnhjzYao3i/8pcgjjm6Y1f2FV2pkJ/HSoHHvfjkpLT/h
wScfSSxEF76kIP6j917t89GnK1esyqjE6loZFvTi+581Gen2zH5RE/9AeG3R
5vSXnnjp5PHrchd74rEuS7ZGHto2s+fjz9zJKqirq88pKCyzORtr8ioL7pw7
c/qj9999u28/Kti8mRM+7D8cTVBMO0kJv1dYlMruyvSzWx7+/f/f+YX3X3n5
te5//t1zb/etUUVzRcYnbz7XZ9C4DwajO7912cQnO3dOzShpqKvNzs5tcrl2
Lg1/v/cbFTpRPZbe3R4LmbcCig0dNmRU4IKi9OhuDz3+dXY17Fk+7PO+g4IS
KjKeeeA3+6IO1dbW5BVVFJdYFex/bmqXNr8cIFLlvCTBBKNuQWunjxv5XNcu
n44LcDF97pg+z7/wxjv9xoNEHd286OkevapV5MOQ4Z9/OmJmal7sQ089djml
mDFiqc8pL8m6dj3mq/4DnnjlY1XTVswNevWj/m5hZJK+RzrnTfxTwMuiTZkv
PNlr0JCxOw9GhwUF//G+h45cP1dVcK3Lo0+Nmjzj9PETwz//srCyMWr9gnf6
vJGUljYnMPDFV94GFl0WGvjg412PXMJOVE50nd0rHVLGwoTpg956+dXXD526
dOrUmUNR635//582nbwlhDZrbJ9f/dc/LIyOhfotzz316uN/Dhi74ODZc58P
GllYX7tj6bznn3iujnJFaX79pWfHjg86cexw586dBo2fRty577/wyvP9Rkbv
2/zpk49+OmSqjSl+Az559bnXT54+Nn5S8IbNJ+GFqczK2qO6kgmdFcxXjjnJ
VcUDTkzUmoX/8z/9P9OXrIXjRyPn/tf/8t8D5m+B7YqCjC7duo2ZOm3L9lVd
/njfgdMxmQVxv/3T76/GZ8PRg9Hr33nt+fi4hDWrVj/Q7XWn2xm5dPZ/PNZ1
5+lrxkSHX/hJTdxLMFjUYyufNGbUm+998Mq7fxn08cCjR0/Z0GSwZyWkDhs+
4uMP++zYsafeTVy20rUr5r7yxpvjxvhn5JcyqpflJH45aHjA7CU4x4cqhHO5
bqQdNvCfAqPSrE31I/q9vX3fwZbd2sQJY2ct20AJuXJi68efDkkrqZcznGry
k26P/mrSy30+Wrtjr0fzHN68ftzQiQ0aTvZJTrz12Sf9ggInh8ycOXHGLErd
lUV5A0aPnzVn8sgP+77/hR94tNb6qgVzI958+41pIXOKKmp1SnXq4e1xjF7m
uVeERoQGjjfFGQcsLfbSRx98fO5mIhzOS7765ltvHr6SzHFig8jMSB02YvC7
H7x0YM9BykROfmKfzz/MyimB6lcUx7ZNGz545/0hA/pfSs4BFd5YnvHFqPGj
ps7RVAUksz2a6ibaN3BC411ZYGxCA1Op7Z5mJne3TGTiOHdRERy795AOwMtk
LrAwSPtr2z8LoDV0J/yFOnKqhGiUEfQmgRcUXRUMrSxo2g04C9TqOwkqivBm
oeI0SDenKr2rzjGWFmUHd0VevHg2Ny/1uW69Q5dskkPZd83bocbySK0d1rSX
RRUNhI2grOgc6souZDRGOe6E3aAe7DBxe3Tda7wKZFuqMMFkX7LGiM4U2lon
Ck6fcglhYfJ8XVPg3fwyD2jiXgZnhLo1pmu4YoRpOlGYzglu49IRSqimEfBh
iVsjGpahuB8n4RM30QkqfhwVBeuKs/bXtn8e4JEJoUST676kZUgY8KKcTy7X
MbkZ1VzYUaxRTqFqdag+9MM1DpwLZXHAWlYkgfqGCxHCdDh8YM+Od//y5nO9
e0RELG52uLBm4VQjoZm8LveG3Wqf9cyBMAkFMpWyQjjoBBUeXZduuHcpPNYS
QeYkOtWgzlS3N8aDhquSKa50wl9QGfgGVBXkEUSRgQBTBQ8QMyiZCRP3JnxR
jAhqLc3Yea8tCDNhwoSJn4eW2Hre8FBCRidoG6zAhAkTJkz8FbSNN+KLOvhL
35QJEyZMtA+05U/REv5atAmXbcKECRMmTJgwYcKECRMmTJgwYcKECRMmTHQw
+IYXfbmoTJgwYcLEX8e3iVTXdY/H43a7PSZMmDBh4ofwnbaouc7ChAkTJn4G
uAkTJkyY+In4pZnbhAkTJkyYMGHChAkTJkyYMGHChAkTJv6JwFv/ct8WM8JZ
w38N48t6M0Zz4ygVXGFUuDBsrZFFUpURrGU+VIZxbxUMEk7hP8Mw1qq8NhNU
E1QGrZUTr/CwcOEXGJ/gGJYzPhL5Q3WZ10pGfMCw2IpxCzJCLBVMgy/DrFpw
RxhdV6ZkUDHLDZ7IqPea+KcdB4lo7dIm3ueQIS3xsTFwrk4xiaKM24yv6q9c
SIc60vESUF2EcwKfdYwprLTr6vkJ4NxIlYayKZhXxuVHwYmMQ6xwjuLHW8Tf
G18Z64x7I79L+RMyDh735sQzdtKW4h2zMmWeQ9ZGHOHRCcWsdlS2P5BHgs0V
ZUpnLRXRmiXF1+yxtlEGOeeUaxg5nPqO8rbi3r5CiH+DRY3noULm/gMSQk5i
BBspfIBKg0pwcWrVVNGI2aopMphwc2HFesTrEChsBzbkOjIpY4rwIMNBZVNV
aCqcoRu0jAGwHTLHIHwjUZD64Gtdsuo9DIrAe2FeFpW5G+TrIcgHcDtwWwrS
AjPeh4wpDttwNQ0ahIosCreqMy7jmrdT0b5LuBT58IYsKzqIH+73aMxNNagP
XYeqayvm37wUvAVMNILEQRRGNDthHng9ml3cI9nAUaOqsopUxlE2hKHfhYcS
D6hkHWSYOVEtYz17hFeDI0FgM/d+4kbjZqC/mAdDuaMYCplwhPqsj46DFsOK
Y/sjXmUhs1KDdaRxRegaHFChwaluAnVIoEUrLW2WMV+OWaw9TRpgxLB5CNMV
omBGADeTYk5beVf+Ilih7YZFvw2j7apCUbiLQutjOrRS5DCucq6o3O0hKkid
m+tcRYMUM0oj7xkaXoMa8tqiOlqmILh4MkWpZZh9QYGqV2XSBm/NYSYCaWdC
DcMrQEF1UsMCVg17lmFSAjfDryTCI+1S/E+9NoJuZCGSV0PNKJPd4DFKkOeN
l98ewdsqNzQgUfODyuBQnaBIQDSBCFUpm9CKlW/YQXdNz8A8IpgCA80GDi4A
dRLhBqNUvop/+IP9EmDc8KxAsTMmpQepD3MGoWIGc4ABu3pkU+ZSZ0nFDGLL
ueEcSUlUpeCi7IKAolFADVeLtCi8dipq34NW99TrHsoUVpj+g4DmRlNHJ2iL
qlR14gamsSPe9meYnUKmqsFKU7CVg6yC0mcenTo9OkGexd868xmiLX9pu69K
VLh6S04pmaVLKiIdJRHsTLt0pzlrFgpYNAKl0GA0eHywiaj0HOEUD5qnMtGV
FFlo8zowowOThVH0ncBqhNNRhxMjkRWcyKVke+RHgyE9hDl8bOAU1IZ2rXT9
dW+fg0Gk8MZ0tGWFLxWWNJ6lndpOlZqRrwefXWe0letUinlvdLDV4eGpaLY6
UfvoGtW+lw859dYA1gV3N1swpyXYA0S7ZxKH4YPrPkmgTIod+k/M6XS6XB6q
YcIqw7lEFS6N0BYwqeJbrgTNXldtNgseYKTFzef3AouyNlmPCVO4NPEZcxHq
qXUosp+De5kCmji0bWacaBg4BGVWAqwpjVKr1a57PHflXmphUdaeqvKu7lAJ
Jgx/B4SrIteWkyMqbZjCiqFZB+oalJCC2kS4mnLztkRSldnApWcad+tcA/8d
DR0FzSbUV9JGAiPI4ajL0TSPIDRt7+amvFz8Gh18UWbj1IW6Cs7RdE2r59yF
2k1l6NJTaYpqBAhDrbflp7pyc8H4EtITwwSEHPOyYQ4xNHS5DXwERlWuEWKz
1pWAz6riLXPZodoOWdSb8ozIJgyVKpqaGpKTku2y8RJ4ZIq5KffuPHn16lWw
rzS3Ct4VkQkojTW/NptNVVvTVubl5aXfyaCSjS9furJv3yEhcwbdI9OJZScm
smRKelptTRnuoSBBmselLF6yvKq2lqpUwaR14KPjAdmDL5qbmnVN9XZGEyU5
Na2wtFCeSyIjN2TcyRRoMPjYlnWwftE23X3ICYYqabJYUpLS6mvqhWxZOub3
5MfOn4g6cQFkCdx0xty6ipk9sduJ6Q5nrcPlpl4FRivKclMT08ChhQ8ZWYlb
N24Q6O1LPe+V+dauxXaCNvdsPCY+O9CdvTJ69p25/UoXBxXMmNUYn+gSzO5T
Q7iilNsrE7InBwqb4sTEMx5MWy1z99o42JrGIBGTtqGHunIT5w8QtkZ4FZb0
a5rFgj49ZrZFXxx8p2ZgWlYHJTHZLWo38LLAuXK6qAOk2VlVFr8ouHTepPzQ
6Wlrtmk2l5MTZ0sHFLA70RyEuhT0wkDg7dxRcGNxsLCWI/GrSMrOdui0oimE
mRRBU0MtaWdPXR41YmTYnHA/vxGXLl6VL0tLSIhbvGALpkgWTt+JQKFGMrVB
gwbt2bMHNoBLFy9dMiUoeMbUqdOnBVmbnVBg7pyZyYlp4t6I0M5l7B17Y/WU
GTOnBs8K8Bt28vx52emub9u04/ix098or8ixE11RPvnw46uXL8HphYWFAZMn
hoaFjxw3csOmSChTWFQ4Y8YMh93V0nPCWsaYOgh46/PIlKkENfLZs2eHjxw9
JXD2hGFj9x3cpciBtvLc1KDwkDq3++6nByLAzyGhE8PnLRDIMGxn1JopE0fM
mTlnzOig0ooq2Ldq+bzjp07BUZWwlmpkPlJqJ5CWp3f8Eo0eqmMPZWV6fELI
fCROodrik6/OXchoo8bKiq7tTt62uP7aFWS/6pSKoOmgmRgY82mXkrdvyjt8
XDQryIvNdVmnzsTv2lKffFM4HSUHVpSM6pG9a7fuoKXx+52WGjAztcbCjKPb
MrettyXfgW+3lceWnd9fdSMtY9V6e+J1NAXA/VIdgtbkrQ6tPrZVYF+CJXP9
iuID++BOldLy/D2HYrdFNeakgtmslOc1nTlTcmh/8dUD1ac2JY39KnPnRkdD
Pc4kAOuWtR/noC0wAbID/pSUpAz60r+irBL2VVXljhgwrqyiGdp6RGhYTFwp
FLh8Ofr0pZjoqD0rV6xoaGyEYllZWf7+/nPmzIHtmzduTgiYbFxy6tSJ+w6f
x51XTkXMMWS7/Ujrz4VhgZ/cvnHp8iWw0ViVP9J/cqPDY6krCZgU7FFQ61w+
efTyjYQN2zZvXbvU4kZD4ebVy6NGDlu2ZDlsL1y0MCpqF2xYLLb+Az6vqCyT
O+d/fQ7agpwz0gF68u4G9w5nGjlRsOMsPy8HVHNJeQXss9TVDB7x2YU7GbAd
vXzp7pMnYCPt4pXTJ67sP3UifPGUkqJiOLmmunLq9DGTJoPudpeUFY8cMtwj
nanFS5ZFLFoLG4X5t/wD/T0aQ7sVeZR6v5a3Ixql32BR8ImB4qylOZdmhNck
JSqaS6jUXVfFdWvlvq3F+9c2ZZ/IWBHcdOuKXpOX5x8kdIs98XLmuhBb+o3i
zWsLItdzV232ykV31m+rjL18c87shkupSvK5moA3mm/f5ipPDPuyJvMm81iu
LZlbcHBf/cXz8TOCXDm59E5M0tDXC49eajh4PC2wv6egHCefaB7BK8p3L05Z
EuquKEYjWC3X6jKEpTYjeG7Fgb0VN85dnj3dkR1LS9LSBwxNX7e5Ku2alnwm
e/LI5uvnKfhiTs41qol22PuHChkcbhS5Q0fWLwhDx8ftQi9+5riQw6duaVr5
tDHja+wodWFzR70/bMLVS9fnhM4JCQmBRg38eefOnXXr1p05e8Zht9c3O3Ud
X3To7JCLtxLhItb68qAJ45sc7l/0If9BMOzt9bMnHzy8p7GxyVpXMHBcQGFF
062rp+cvXC2kU+Q/uO9ov5nnLp6f5f/F8vX7dapPDfIrrywLnTM3PT2tvr7O
6XAzThvrLQGTJjTbLNDgL1w4PW/uMiHH7lp6DjsOuHcIF+kB/D34u31z5Jo1
a2DDagcfk23Ytnjqxs3wcf7QkUm5+bDn9Nrlb7zW78TVa0s2Ths2fCx49OvW
rr505eixE8c3bDihqGpDbY3QwTAQa9dFRu9BE5SxqklTAu4UoIWgYw8cFb5B
lnbIojjEhnM2Na6DneOwJB5PXTwpM2B8+bYNxFNMHIXZEwIatuwuubEvffXk
wo1r9YrCDLBFSXXN2jmly2aUxJzI3b/8VpifK+frhIUT4ALgZlqLMsvTCoRS
kTb3C2J3g8NdMe9zmh3feOtqzPIFBrfVnVufFrWRpSXWhX9kdC3krh7eEJuK
A1KECY/GqTXzWGTObP+8aVNqLt6EU2ouH89dBHYUfIWt+sjOnJ0rlZpb+XNm
guWJz2LNyVg4ndcV4vvQuU5Vu/D8QDX8EwIn2RDKmmAzeveKRfM2gkOkuDXG
aNCgKbuPXrFUJU4ZOgZJVrgjFoyLPHcNtspKS8eOHWu3Ow4ePATNPCcn98KF
C7DfQ5BGTuzbMT9skWpMHvU4gvyHZxaUCtHxs6gbLLp22pj+Az6bM3/R3Gkj
er3zYWm9c++OyLWRstND8LDJg67eToHtpJh944IW252WI4eiGBex8bdjY2MF
Dpxi//qs4OAz0gMFpN+JDwwIFXK8SXbAt0Nl/f34NouuWrYkKioKKtOpeDhX
d+5dM2zBMurQ5/QbWm4FbuRn1y1ZvHQ9lLSx3MHDJ1RXuk+dOmazV9XVlx09
ekN2edqgsuNuxk7wn+XygBPvBJYICp51/jpqdkKpVxm1TxY1JmSisBGPYA7d
XitcOmfVSmlhwfqpGetm6nm3c6cFOE8lFsdeKbt1hdRWKuV3iqdMFu6K3CWT
66L319+6Whh72FKW5Uy/mbdqEbc73Wql0YXKSvNqQga7bPXwNWXzRiiZ2U1H
zxTv3oZjQ0RTkqPTdqzQEpOLlw7ThZ0ze+oa/8r4eDiRqIw7ObFDzTtUd6Y1
5Wxi0GT3levl546U7tioc5ubFrtuX8zduE4vvVq0IIJbNY15mCUrfmGgXpFB
cRwbO3Rc3n7adgXZVc0IPLt+7syB8JClsE9xQX1qk/3Cvr6dWlp4buK4iXaU
NNvchRPXnYyB15eVkzHab6wuWVHTvA4m1XFw6vKV85MnzrA1OwnRGJTQnQGB
Q1MzC8S9w6KBI06elV2gevnAgBm5NdbdkeuXbzws5CyPOYGjvr6dAiWvn989
eMoK40S1ZcIj0VGSly9btnodsoSuYqvJzL7tPyGsZXjeKUelf4nH+/vANxUR
WZRiC4rcsG7tWnTD3S7Q3uqmHTtmbN7FHVrAp+OKbGB6iTMbF0xfF6kzZm+6
NXrspNw6KYEcqg6PEg1+a1nZ2aPHBhUVV4DNRnQQb2VKYMiFC7ewgE7kKAAq
+XbVP9JqizLZUSz7kLXs6+cTthySY0OC1KScneKnFmTHTplISrE2dK45nY1q
cXLJ1EChNqWtmlp+9qK8mlVxWjxV+TfmBIv6erhOcWZsUXKeaCgqmNmXeWqg
cgqWDVHyUxuyr15cPFFgp59aumt5QfRBmhlXtGQMTvLX7OkbJlni7uBXU114
7PGrVjSlxst5TKxp+6qatSts6TEp80NwDEpYC3ZsyouOZpVxWXPnCgcY0xpr
zE5YNFXUFuJzqUDV7dOjxx59ziioFavNWj8/dKHbht37Vkvx7JBlTo0VFZ31
nzi5Cfc5whcHRZ5CObyTnT7Wf7xb0xSNgiWPs/pUnECelRE7K2S66qsGOKhb
Jgb4FZbXiXuARY1VRmc3Lw2LWAQbjrrMT0b6NWv68d3bl6/fJwnDNXPSqPMJ
6XA07urRocHgt3LN40bDiBBKkEIP7d25RY4rIfB6JDn1SmBQhKHucA5gx2JR
0TrMw+W0R56VeWfo0KFOl/TsdOfQMQHHk1OFXZ02ZHxuE3pFp7csmbwuEhct
NMWPGzspqwHsIMaJi/FmlcAVnFVVJTNmza6ttxrXJzjErMyYHnb1qrSagEWZ
waK0nbIolSqbamCLKm5LRezqaenr/SwbVpdP9a84sVPQyooLG9NDxtVEr05d
sKI+OVkpzz0/zZ9qjUrezZSgOeUbtlQsX12076gQTRlndsUtWNK0bXfWzIim
tBIBzv+8wTmrVguXLS/0K2fSDcbKk7eFFi1fkbdj9c1F8/VKt3brdE64H84m
89hSFo2tj8nCF6g6wEyuuRaTPju8YfWq8jVLk0KD3fmJgtYWrVxVuSSyZPOG
W/Nnq3UlnpLbObPnCjvRuSo8NQmrIy5tWOlptnMVF6XxdjRpwgc5s5sRB+ee
grysz/t+9WmfAYW5+Z9/9s4nfYfkFJe5XQX+/gHFNRqoihmzx68/fBVOys7N
+nLgAA1MB8pxlFlH56i8uODVl7qsXrP60JGTW6P2Xb+cABq/tiorYFKIzd0O
rfSfDqABVdNstUV+AYEr160PHD80cudu2H/98qk5cxdKS5IGjBl6LiYZdl47
t6//uLl4FtWgPUs3k588tPel3j1OnjgRvWfflm27sjNzQaqOn9y3fAXyKk4f
B7eLkw7Goi0zeFBRoDEi+Pbt20eN9lu6NGLaRP8FyzZacQ0TC/cfdysLKoTv
WbtowqIVUNpelzjgyyH5dSqerrsZt4MiszfX9Pv0g+DgkOMnz27dsffMma8p
ceuKZYL/lKKKRjnv1OChdrdOhresU8f1BpTKhe/EjT3A9rLGlEv15y6TxBxd
1a1oN7o9OWlll4678zIpdavNNZU5aRqxMVrPK8srrp2tT4zhHhdjVsEb69IT
6q9dFBVlQtcYb1DLkytvJhCXZs+6YbdabKJJ5zWWW0mVVy5rjTV4A1UF1swE
UFFMddqy4t1NTpcgTq7qzAOOPS0obrx4sfbqeaUqjwmHW1iF22K9FVd25SJr
wH4DxV5cn5Oq67hSVWhWR2lOYVyM2uzEOW46p6R9vRQEUj8aky5CXBXlhadP
nDlz4uvyktIL548fO3wyu7QUnnr54pXnruAgaVrGrezqJg5Vb22KT0xQCVMI
Lm6SdpTW3Fh79vSxU6dOHT5+cu/+o7dvJMApl88fXb0CB51pO53A8NPANd0N
WtnqsB86djw5OQk9L5wsWjctKKDR5oIqSE2MrWiwEOapr869nZonl+xpcsgV
V4bkZqWfOnH0+Injhw4f23/oSFEB9oTMi5hz83aSEMY6EL1drfz+yQBH1ZhB
d+dOxqGj+1NTU+FZrbhYiR+NWhu15yAcKs7LjCso0RjTXGVJCYkWFafhQ/vl
3A2iCCx6+dLXZ06fPXz05IGDx65cuQ61m5keNyssHOfjMGPKqLTreEvXaPvA
XbPupcrB9UOcqpy2DjgqVDTKSXQGKC4uUg0DTwXaw3VIYORjz5FbLrnE1fOG
zwMcKlSCfa74WZeXVPBSrEG0dNuhv6UaNrwDinBifDF8nUvgMnzwCNrUJ3yh
R0eLWffeDlQ9zi3Hfmorjo2B9eAyloQaq6AxAkr79Fg5zpnQcfrtt4D+FXeW
F1eEzF7Z3FyPfqfROS+flGDoA8GMiYzsOzS7zVI1P3ROWWk9Ti+5J9bRQ0V4
NNa6BoHhLDI3VNWFs0fWbd6lS5cfRRQ78RRZAJxRw1D/7gngiQkJixcv0wlO
6jU6D32xczoqGC7aau0cU7GO4GOzx1odMicsu6paGMsQQS9jLA1jLbaMKoSL
6MW35VDXteVLIhLSkJBVxr3Rdrgcqed/JSrEPyG+fatyPbzgCq6XdYJJiAvb
hZsZS9pxFZMMyyDpVkYWkmPh2A+HdCUjmcieKFxkiGvAcE08xwX5Ml4Ix+Al
HubmqptRuSqc4xxnQRWclKZC9Xlk08aZYzIkAXCihXMFF8WjWKvcWNsJLwsX
7btl+AMM4cSEMY8f46JwHdWBbAZq+5ZsbkzjpRRX1Rizx4lG3bjgE5XLxYvX
r9+8BC9KUXHGHQYzoEakIdGq9MC5h7OJU6MOVcPErzcvnY2VPVEOXW2nKuYn
ghuKhmIYLOysk9WCsgi/o/ceza+qIjrRcR0OyJ6KQn63X4lzAFsAZpWqOPfv
3VdeXoO9JnKVuOxDpB1sslNbK8sHaJs6LmeRK6ux36gWdqanpe7++jLDEA9E
nqBLpjDk1+g2xPqR4RygBqmuQQGWcSf9zCmcaKrIUaUWe8439749N1wJJleo
u4SmY7d5syAOQXQqjU5vlDwjCIiMScC5RoTU3ExGvBLe1bQUozlQGXYMJMwN
P97II7igvtkjFE3IUSOCnjiGMCByyb1Av5zLVaDCQ8FBsKCZKpW95F1vjCd8
gzi5SRHSntKN8Ce46RZGtC4MxucR7ZkmWpa/t05HlJ0vKmgcrGgUM4fqweem
GNvp7mAO3tiFcjkzzj6VcQtgQydujKcHSslN6b0w6x7BRcv6IqnZvfWpy4Xg
ohmsIoXoblUzQt2hQLHv98+NnhaUVI05jLhmsoY1rxPUceDVxq2kho9qrJaX
cYgwGkszAwnkwg6GlSpjZ3jXOxnwxhW8y+NFFwntJyIXPFLeMqXKW6Zds2jr
8lWfNaNLJ50gdREZKQ9DCsqwSzhuQdH7tshgVy4mPXEOLriG5GbEvVRQ32vS
NoUr2hlUOBAuhsODo06G3ItFoSkreDW4nophTLiLoCWLhpcgYKKqQsbcwbBS
hGjchd2f+G0OSSlwP24iZxigL0bQCnYbXVVgXghNE+05wlar8GnewCv4yFAJ
YP3LuCSqx8NkMAFNU0Uri0q6YLxVGqmsaY51wwlzYRwDjSjKPUKhwmvUE0ND
CxdGhuCSDCi0fVywR3QUMI83Phj25X3fxA5cTs7dcv4DSF4DMXSTjLkn2uPM
5O8Fbwn3512X5SU1bgTOlCGdCHegFLqZi9txsrkiO/aMECTeoSKcQXl3vyEy
CYowepxQjYy3WaFtcKxs8LT9jDHx1r9eVeNtiEanBvOGTSJeDW7wKDwn1BcF
xnRLYsT4TWjVQAV4gN+YcZ4MHqrL2vZ+EjjXxiFnUHFGjaX7DOeTGZ2wYDrK
yThUlTPMdCrbvma8MFB6OEsP7FLV6dVdTnnDYG168ILGnRImY/LJ8T64E7Ru
WTu2RrlPuRFvlCtuBBJiGgZ8BXNSxZitaKuCLUp9LMq90aB875PIgI8YRQaN
fBkkBueA3RNDSwg5DYW3SLSHyqhjhkQzgl4ol3GXdSNQOMNI1sZkR+/pd3m2
GDcXHHuqg7g5Wastqov2ODP5r6F1STu/iys05AG0qKAtSyNIlb3J4JmCGBqh
srwsSmV/2zfqkWMFgxjrVEp0y0hSq/QKeVZ7tEX/ydFumdCECRMmTJgwYcKE
CRMmTJgwYcKECRMmTJgwYaL9gxCiSKgmTJgwYeKH8A0KxUmvjAGR6iZMmDBh
4kfgO83Re2PpnwkTJkyYMGHChAkTJkyYMGHChAkTJkyYMGHChAkTJlphBGP2
bfi2f+n7ajdoW28/HkxmTzfy4t3j+HkiZwTL/fvckQkTPxlGi/bBbNo/Hm0r
7cfzAGYoo/QnndKBYUyb/PGU6Ktwoxrv9To0oq/91T28PeVPaX/AFKdSDo0W
7WvaJpH+eGiaZlTXj680o6pNU0q0TD6XwYCRS3/sWYYm+inc2x5hpJExlMbf
OyqdkXZEZh/5UV/E7z2GwLD1qLhliFBf4HCvJ8W8eh0KsNYC97qK/y54bUiZ
VM2A0Yq93uW3aoy2sTa5rH9DT1EZEJfdez5pixzStjakjzy/0zhnrFWnYz37
XgE3Uq0I7592D373HyqjdrO2SWSYzMSEqY+MhFQcM38o9SWa3WGIoAywytyN
1R6LFXdwGVWY6+7GGq3ZI3NXYHp1jinsiMyaSr1X9YbC99azji9K1TFvC8ej
VCYF5DJzC5PxiTE4M4aAhddADD5lwgj43LHAvTGZUdjuWjdBjVckmaC8rCwx
PhWjixOFEEblCovKutqk+Fgh81dSIz9tR6ucnwyOSbru0r5c0iJsxCUkVVdU
YbZlZEjCJRMwKeQtJek39LZHUa9duaQrKjXSDwli5MVobymAfwhtc5BjYHrt
G5LEjXDrgtY21F+LTRQyxwSXLR0DYnMZeV1C92ZKbXMu50U5GVlZmMRW95Iv
a5H578z49M8LbrCl1Acy5QfQpIM7SvK2LktZNTVl5fLC6KOs3kow8RImmOPS
bHdjTG9bzppJZRdu4kWI7lawnnIiI0qOHBIYC9tNiEUIV9yGOcXH4nCP5iA6
Zkx1Czsmq6Iq11XM70kqymP2xm5ZcGdbpCOnBK/G6m3MjYHsaSN3KU6uu6B+
FWAIholIlJSMU5HUTjTOFa5y476JJPj2U+0/DJm/D4Paq26KteDcvHvbjGD/
A7v2Nmi67sHMK43uprmh8woySoVQiNZgnKdR6lA8K+fNjL2JSX7t3KOR9pnB
5m8JznQH1EJ83K0ZYWFLI7damm1EU8B2T05JC1201ml3gHa3MRnFnTJF5x6Q
UOE6tHt3bXkJw/w44tyV86FzQpYuXlFWjbm/jx3YfiASk9G7UcnZOOgvzNem
/NJP+reD5DFVeBNEU+YWil31WLft2Dp92oz1GzZb7S6MVU88Qm8KW7j0bHIW
Jk1BHdQM7dGqE7cGZOK+dvXU5esJusxF0VBVtHHZwtkh4YfPXYFvsFaVzA6Z
VlJTo2NbptTIYcFarKr205zbsqiO+Yzho0evyciaONF25nRj6q3CdTMzVy8R
RNPt1czi5m7BPJrb3gCSlb8xpOHSba3JplmrZboaXrJxQdWp7ZrNrtVVYBpk
rqbumlN+5iqmX9A9msVqrykSHjtaoEzBjAuC1x3amhexsOZmXO35LUlTRllS
s1CSQS6bqjyWfHx5THMrjcJdSayNqsPlzL+YMGV4c0oF8iqmYZMJcAW8yw7m
6GOfvTTEnZpqmR4Qunj5qvj4mFVLFgTOmadjJlSxed+WvQcxhaLNWg5CWldv
sTTWavKNlhemhkwLVXTi5DIXY8eqmp8K6VHy7Ngrw0YOv3k7bsP6lUGzw9Gk
191TZs7PKq2CMg6rwy5EbWOl29KAuRAZqS8v6f1czy07t8DR/dHR48aNTUhL
2x61afTQ8TanAs0gPGh8an4xw7y0TiRdTL/agTKGSENTkyyKqZEYUZ32oMkT
IpYuTUhIXrNixXi/8Q0OJxyOOb930erNcIbDVu9mwmqrrS8vxoTp4EMSz9jR
Q4aOCoSjzVbL2IFDDhw8mJQQP+irkcdPnIWd504eWLJoucBcy+CpajIlXjuj
UNGWRXmLLSo8Wm1myYJ5Ml8KNM4TVwLHCLdadGBL9aGzWKzwdl7YdOEkhVsD
00ODi5YuTg4e3Hj1OhSuXr8oP2RU6YqVWf7TG0/DHp67dWbN2TNMeGwpV9NX
zclfPL16+XperwjarHOrEE3ZETNc567Je7FVxh4sTI0Tulq4eV3+3LDUeWFl
x46B6W+/fSxvyog7U0LKT1wr27E2aVjf/E1H9AawH1y69CiARZWOxaJS+xOG
edXorWsH/P0WthzRho31i4/NhoceP9Evt7yRc7JqSei4oIhFi+d/2e8vR0/H
SEfUHRI4IS41m8sMq/zeHmwi0nOPWjTnwpVzcoc6NmhadZMjPytpfPACJD7O
w4P8J85dOH3WlIlffBCTeAf27dgYtX/frilz57lcnmMHd2fnFslz2cSRE4sq
62Fr/9Yla7ftgw2F6bLHCSSwA3n0sg+UyO4jmaRK3DxzempgoO/4nNkzNhw9
Dxvzp427nHAHyh/fvu7LMQHL1qwZ9vkHa3buhUMJNy5tWLdu0bL18anp9TWV
UVH7jXOP7YwKXbIezFZPQ6H/mElVjeApCMx+Lny5w9qTS+9lUWF0Z8ghHuHW
6rNTpo2v2ra94OTRrHB/y0nUGvnRa+pOHsFEf+Vni2cPBS2Tu2lEztblQmty
ZG5OCpkkbEr5pkWZawOFVqNk374aHEYaa1J3ziw9d4a76wpm+dkzU4SjOTsi
oujYaZA2ByFOwRoyLidPHZq7bWVjTAwm7xRq4cVVaUsihKeRWnJiZ/k1F+S4
kvcnBg5SK0q55hJ16dlzR4kqK7Cmyh3U+wRE3v0vXZt/O1DZ9pnaDJsHo5cv
XLATDCqPx82Ybdw4v4MHL6s1OYET/OsxFahlUfi0wPnRhOixt04NHBFGdOxd
iloVvnnnUfEDCS3vCVCpRJbMCJ4yZdSuqO27Ns7/4OOPKmqcx44fWrB2J5bg
fObIfou37tCJfmbHqoDgJQ63MzBoiqaTLeu2nTpzCS9CsVqvXTgbMifcSLaY
GnckIHgV2qJeFhUdqlMJc6QyoxPeyC2/ecWqrZu3gRzaHApjrj27t/gvjQab
fOKwwYV1YMiLY5sW9xsX4FGUqtKUd78a06xoS+fPycwoSEy5s3jRSmNYWFN1
ze0aHzTldkaOtBWapwTOiE0Eq0BgWmZv5nohB5zbjUrysSi49LqXRT1qfWbq
tHGWjZsrjhwuWBBcvmm7IHrxvnX1R6ORu4oSU8PHCqYVbAlqPntbPmtu2pxg
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
kEjHDlIcND189GDkNukcUTcx5uGDvBIsk52WFDF/GQGfiWkaGKO0g1XOTwXU
jGpMVKDcWxeE6IyQhQvmJqVn4keua96hYd2YRi8JUZeiTtAfhYbhUTRddWm6
RrmqKqHBk0ur6oxrSuljHU1d8dYBHo4KxW1sk5b0GYqGx1MSri6MwNlKnGJ2
IpRa5kIDVg7zyytQVEoMHSdd1zWoO81jUXByxMmju7dFbYPKwyUPvM2sezyl
3Ywu/Qi0CXdjdFn4CIu3WWbYuixRtC3c9jK+y919rO01+Ld2fdcN/dQn6Fgw
FnuCNKqqumzZ0qSkZB1zaBGkW7m8zmazLVq0OD8/D90wyoyFzr/0Xf9TwKgH
LmuPygV3RUVF4XPnWq1WY2lnS8EfEjHOd+zYcez4cdGyhvQewTcCiImWphoZ
ufHSJZzJ8CPn1DG5LrSkpCRiwYLmZpsv8gPrIKtB26LjPVFHgCFyRuNtbGzM
zwfvHi1WyZnenUAOQjZwg3J/2Rv+ZwNrYQBjAXhZeXl9fb2hg37kFVwuV2Ym
WrDfl9TsngKIo1EhPz5Ak7HivrS0tK6uTrQYBuKnBIQxYeL/Br6oTT7zCTaM
0GQAw8oSLZLpi/j0S9/1PxHahsLzRcECw/7H15JR0ggG1bHmhvwcoJOuoXv+
42M6+cyAtlFGzco08Y+Er+0bQugjVWPb4FJ+N37pW/7nQttArD698+NrCUoC
b5jB8QxABfqMyR9Th21VmEG8P/5cEyZMmDBhwoQJEyZMmDBhwoQJEyZMmDDx
y8LsyzVhwoSJn422OfhMmDBhwsRfx7cpVNd1t4THhAkTJkz8EL5BoeY0QhMm
TJj4m8BkURMmTJgwYcKECRMmTJgwYcKECRMmTNyL8IUKbbPVcogKTCSPEWuN
INS4h35HIFpqxF0WvpDJMjwrJkXVhRFEn7V8g4z7agR+5i3nyghEQvhy/rVE
DFcwMz1sumW6eSOtjffLMWyucTITim+vvLg3XK78St6+M7F/o9e65eFkXFfG
jaSzHqg2WYFt89TQlji3on1lpP17QqYQwkyxxpwV6q03I2/nd/60RZs991Jt
fosdjE/eKuIyeDj9VkTlb9eQtz22tEYdm6/3ojKmPfcRRNtqbic13fJwgrc+
QmulcBVTTGHjJDIvB7Cp4m2gvnNltVBvthEZIZzLbGGcyfIemaJZEawlNjOX
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
ucOHypswIr2xVSLrxjikS0Q3TEg8YQhG5WmG+ZJjBl4VU40Y0flUhLFOMdZX
CU8igS8CUFSVqZGXBO4NLoXJo1zeaatieLxydVbhF9qmuQ6oB0V9bgaqxrO3
4BfAN80N/FCReZrgcIFSjv0bcUFnolNGdz7NiZY9CR10KFN//oK/d8LZucKl
XUWNBzoszqsM4xuTRIwo5gF0hmlL+fHQGRRsXdEoWcNUezKReCYdQu2YMOor
QFFjj2444WI8B/DTDSx02amkCzh1gp7LEwZxFBWMHkgxw4Un7zB+UEQQTKfL
wfjYxlVQTLKH6o/uWRTeNihKfZ612iYUZb7QGS55OA4zbh3iMQyejEka8yRg
Nib80F1dPCmzZsgUNwVoHpmTiZG2gQoq4/Moauj9AJIy9aCoxl8L1Y33hTHk
iIEuT8ZhOFE0so/KRrijZ/FdNWYKIgaTEiPhpsc/g0/lZa+RfNuRhy3eQDgj
PoJ6w3SBi1SW8Z1hdkGcLKhGyDywmWdwgad34+CjYLg43ZYc+I2JcJnlGWcx
SwuOOSrxqvo8ig8UA9mTrsQzErPNOLLJSGiIvkvhtiWFGbkhJfr7Wl1C2nhm
nX4yqaOeWHfd2BZ1UG14j6Y89yDxOJdxHcujUhEjm5HXPV2mPFhc5bZQbijQ
UFy9eci8TqMmmWSSSSaZZJJJJplkkkkmmWSSSSaZZJJJJm0JoiaZZJJJJv1K
+gxFCTFLSJhkkkkm/e0EEKppmsRJNskkk0wy6efoMwg11FGVk2aSSSaZZNLP
0Wco+vfVfE0yySSTTDLJJJNMMskkk0wyySSTTDLJJJNMMskkk0wyySSTTDLJ
JJNMMskkk0z6qun7sWnfP+DXN/hT7fzsFbcdUU8+8Z884Nc2+EM7N/PwVzW4
9YmnEP1tefhjbCQ/fcAXIiMRsCfrKt/BS3fw0pnUUytF1ImkbFRW9SYPpht5
nhVvhQsjQb7GFExZy9PeU0wvzGuNYMluWcfctjyPq6dIp6dgCX8ThBLMQE6N
2iNEImxzDYHtkfr6tyJqpOlHDqlYS0VXVFXEsiGeUmyM6t4c9rxkBU8rzLNp
83dDjBzbG2zzlDHgRV99KXAJ9SYWx23d41rsrUMNrfmuAW+R+DyPjSIZ3mIJ
jLEt/3Z4PW2sqqppKmZkNoKgCSWbbtpXVIh6yoDxkriemjp0g2u6j3v8YM8G
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
6a3r+J799SOT0yNdO/aGDi+s2ZcWgg7vet7U6bRM/Gmvf+PA9PrKzLcHj156
/IHahiKO7BvBeYDrdm54wkUc+KyLA385GDNtRV300a0LF68UcLQcS0k5/rJ6
ihleprgW9kVm9IaTn+7TIrgFSXOvzjZcv6HbnTJ1w0C53tvUVnSDyTJzLoyU
FL09k1R/IdPyvo7J0sqrqsrkiNYbZ8ZTYpffPlctw/VR+6eu3G5Ozxu+dI7a
VhGnFe5NqyxOPrj+ITP9Y1Zaz9VcaXEJOh2IaMul9Mr8U83F5zXR4VqZeH81
S3cIVFVAhV35UFWclb4wNcXXCGGXLBuuo18H6TrVVZVSobWlecd3e//5//uu
qan2z3/+w1++2d3c1kOJOzQ8rHd8gVJyIS/rwbM6OGV4eCDmRCrO6FHsqcs5
feJE/NIyLnRWPqwMiY2MDDr8+vFzvuyuv6j6sNfvwPms5B1/+a6upVuTVg4H
hSza3dBgwfXr98srURedmkqMDrPwFfy0mMja5i7cOTcaEhgqiyoarMmGB/RW
9uUlCkiU+25RSVBIcExYcN/gOOwc6u6Mjjqh4coxPZ2cVNfSDtLeWl8Tm4pQ
oCsyyN3a1HBMVLRDVUSn/WJeQWBocFxM5MjICI8mUfIvnz/ovz8vM/1PO/Ys
Ot2LUxNhIVEyeqfaTkSFdE/NQDtVD+5dvHIbjl9aHg4NCnG5BeBT7dtnyalZ
OBncuq5OSJ7gGgzAwPnI2OhIeExcgP/huNCIjp4+mQfInE6MflNXC98+vlN4
9kYhHG5dH4iOjZtbl9GnTsUFjZToE809g3DM6zfvj0XFRR8LKK8oVXnTzZ09
uw8cy06O3+9/+Nq9Cm5dCWsbmQQG3795+VJhBbDOsrIQFp28bEFJzkpOeP/x
A+wUhbmI8MC5edxJ+PrmF/fh8UWoGaFLmi5TmD/qCggEUSVNAWQTeU+RNecS
Fa24sKAJ6NapuJhkZ5qd6Mvu+cEXSYl0aV1ZtYF66zEToN1XN0wrutOmWi3o
i4N+y/w7xam6rMBnJrqppGiSjh4lGvpbwUxeVwWiuDEuAHeh8y/Zwl31tyVN
03D00HRJkkRJ1HVVlkEsmSC4FV4Fpry8/PatW4zxJVR0AUVPch2GG0VFB0ZA
Up1iVRhFMVYHYENRPX3WbncMDPbrmg6d2v+Qf19vL+y8mp9f9QSHfjgJz4Ye
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
yqEow6+bJTcOpl8nLkforu+G7KhuPbuUHZ91Fc90D+w8FDm/ID64e3t+dWFx
fvbG3Sp0HEeroDzU3xl4LMJqdWsIzkpUTErNR+SJposUq6/TbYeiXPVQGfoz
cTd7RFFhsvp+b/J1eOtWTSRUc9SVdecVwNfvTifYOidB816vLl3PuM1UoT/J
T59YnL1yZb21DhRFFW10OnO1jCV+N3ncbyg3i7kMWyfRqUp04PWyxObds82L
VcW9R8PVkaGVa9lqyVMbIU7dbqu5vHztkjzUPhN3kbqJizp1baE7KV6Z6FWo
7KS61XCd+gqIGm4iaLrXnzw5nxCNRnhFA5DTIg+fqn7fOztWHXTsiAUHlZXz
yYFFFW0g3gODzTuPRuqKonJck6yDB4/42xV2Ni3lUVmZiuQqK7mXdaPyYfGZ
8/kPcWlJsceEBtV2jfa9LQmKizdsW5lZZ67fKYMGp0aGQg/utaDORB6VZodm
3OXfW48fjWiu62YcRbkCSnwlsrcgGWaHi9HHHj17IEqKahncFxQ5Mm8ruXnO
g6K6ejJ0/6OGdjiy6XWFX8Q57MfcrGcbbN91PHDeagnZtat9dZ0vFenRkbE1
7b25yWE11bWKqjptA/sC4tck9vjW+ZycPOz+9oXIgztqxmYI0crvn47PwnUl
hcknjwW/ef8RtxfadvkHDtskw5l6y5KBogQrzrPreXn5ly7DhsMtweTyelFB
5MWHussSvGPnpBO10ydXshPPXVUJsc637jkWMz6LDOSGKdS3Nc66uZmRQ4f9
OnsGoFlZhgPkiLCEqpeNeICucv+97Yei3B6qwQ88FHeGB7YJ8mxbf/hRtjJp
HDZ8JWSmLAsk4/WpCFvPNDyu9c2V5dxzTF+ej9tLZoZmntwYrsRuzuTp2TeP
lOXm1rN75YHamZLrUzfR+CPp0K6mOybaz6UKy0MUXfjZfPqptQclq2/vjF5I
49exjuSfWKq6r0w3DqelMIFoTKbi9EByHJsbQvMzLjBvDtn5fRN62nB7u3tl
pftk1GUV9VKmiKsJsVl2N50eex8WEson4Ctnk8Pvl3bB1sBg677jEbosGdqX
aJs8FHDYrtLye7cy0zKNdlMS428/+fjhTVHMiSxjT1TQkdrOgcGWV8Fx8Xzm
wLLOXrxahB1/fnwk4uhOiwN7wb17OYmXHvE7Ww0Liu1sRZsYemDgGUYkyxYV
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
Ub5hR+Q0LuVQuXcjhW39sWZkquxMUeZJoc3B/S9Ozj3S/vZxWFwy1932jJJT
hddr3ENVEcH/OYx3UM4X7kkrvAEXdEx2rg+K7HOg9fX8xsmkjH38GrPZBSln
ry6iqPmFbFHLO7/IDXdcOwPckDwzbS2pMcylOusrqjf+rvN4MXzNgSvHB0tO
MOJ+tX9bz+Or4K3b6hscPU3TrQ9fFBwE/4dSrbcgeerKMV2em72e358YzAx3
W0lWz+HjTJpZ6OkaaazDOJCMz9pw4+TromR1vI3aBwfvn6g6mEpcc9UZu6Ze
PWCqo/vC0a7DhczV35iYYE1M44JSJjUdyZkru8xM9Su2ev5hhMuOqYmLyUxN
8szGxeSUV7yxLP35o3tp0emgiMbH6qN37liQgRWurIzYM2WNcFZXV9e6bbss
TTUsdKQk++TmbVttLldD9dsdGzc6nfYF+9zaLeurW9v7eur+9uNO+/zc/NTw
D3/+vr65s7/nXXjMXomzNiMv7yiftxro7wrestEtYXis9OihQ6dxJyFGRFhY
TzfOoXgnq7/uV4JLHCh5ef/OtqBtbo9U/uzhpuBwYNC9G5cLCorFMbvDN1S8
egcbLytubt2Fpo7FV0ZNDnVt2LQZnu5gXk7GwcOGYdS8q1y7dp2sGXfPlcTF
RHs8nubq8v/45jubQSpvXtqfkY+Td87R8E1bKgan4DK3L2THZ6OFRnR3TPju
Vj6ZNT7SsDUizKbRr3rVvTfiJ/IS6Pzk1No1654+r1BUraam+j9++HvD+AyT
lZjNW3um4EnZzcOF8UXHYcOx0L59y6bZKVz1hFPORNq+7m/V3UO9HU0bNm5y
zE05Xe6gzRufvX7nmhnY8OM3LYOTDsf8mi1bSq+/Je7hyODvx2Q8rbQoLesg
OgtzUw3fb44YsYOPpd25crqohKsqpqSkpTwpR5+I4FJfmXyJ+AgVa4WZL20J
5wpUnHVc6K8vKqA2G5UdNcm7Z2rK4aP+uzc6L6BDJ/VUVx5MflWQVl2c7err
mGyurzh7gukuzGeYaGzPC6nMjezO3dmRncDcqjkz1F6UXpcT9/pgxmRjI9EJ
X5ZqMM9s/52TbzJ3V2cnVhZkuvvbmOlx9LRWHsp+eyCpuXi/MTdm2mbeHDyi
zE1RDRSaOlj77HF0iKsd4WLFzy4hYYoDzto01TV+++f//MO//66uquavf/rP
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
lonpYVStfH0rPhbGNTMMUCxG9Pb06o6hkaFnMdujvCiauav0bg2o9a6elm07
dsOuvbs3pqXuTUnOaahrZSjApu5a2LJ56/DMPPKS8mXk1LvC7cs+6W9AYqiW
xIc+fHKf79DWh8UMT7vKTh4rPH6F7zFiw398VN0GPKx+enLz7nzg2Q/fbcwu
ORidEN0/PE8IoITn9cvG6ND9bHWgKFsSFyU8znn+3JnsbJRDXcGp5ezj+Znn
b1C3Fvb3HSOuBTj8cUlm8sECkC7HXN2WDVsl3cotKInaFVuSE/vgLkbpVRXs
JRq9O7y+DnAA1ThGrJe7BFJv4gb1Kh3GFxXK6mRP/7505pFgx9SV0tZDRSB4
lbkxsy9vmIZt4HTR+P58RqSuQ5FjN8rA3Z68u78mOY5RpT070/a0AidDczPU
K6cbs+MdNVUGxghMppPpd9WPE+PkwRbmGnG0vamKjTQHu6oL9ky9uATXH39w
pj4/hWlWW17MRG01/zbK4L2z1UezieShKgKxjrbyqvDoRaoCJRIls6piT92X
Wv0a1feb1w/2xeXAixkar4gLjnbiK5KzsiKP3nwDWx3d3Ru3rIeNmKiIjpbG
kaGhzZu3z87ZYdTPz4xv377d5kLc1b1+lIn3WO4y/BnEhyp7de/U1p1BqqbV
vX7y49ZQk5I7F0/nFR3nh1gxuzY+q2qHraonp7dHgsFJtm0N7l+YK698uis4
wdQtsN8f3X+dkoi2lkVWflx0KQl5mZyaWrt2bXVNDTON9uZ3/+/6P7eNjsDA
DN8a0Tc9AAfcP5yTkH8ABGzO1rZz3UZd8uzPL7ly9aXiGQ9e893g4KBlGZqq
RUVF9PX2Mx6vXhH6SLjy1IuimB4HGKWpM0N1BwvNeZtOVeIYfpaR5e7pc3TX
3EmOqso/1JWW3ZB3AAwlfbC2KiOzNvV4b37im0MFcOK74yVj76pnm5re7c9k
bN7e/LI+45Asa8xtMQlX4Y69fPoqM7UxK7smLWO6AvBWc43WvjuY8eLg4RdF
ac7JNhjVDSeyZqqb8etYqruv8VZKzEDFC4aLsQBiNb7SdxUQBbcALHQPmECN
da//+se//O9//Wvt25o//Mf//MPv//aiqVOzZmJCdnX22eGl7c+JvvAYp5Da
OzuDdwXDyalJ8S8qnjGcEj2dm1cMxzTWvYvfuxesT+Cg1wBFg3RVoChObRoa
MZxHT5wICYuIDN356k0V7G9tqI6PS+QLcs3k2D3lVWCLkqryaxEJB2EkhIWG
NfciOGRlHDx/BqdIiouOXrgIQuudrlpVJOaD6uvrg4KDd+8ICtsedOfdK1x7
bLKsvXsfv30DMnbtcGFmcQlw22briwwK0lU1/9Dx0jPX4cRnD2/GxsQaujk9
PR4ZEQNGKV8fbq4ITlreFaDe8CjBFA9wrjXJdNpN03AzMCI9xOk2bfDUsHNO
H3cyWdI8oypmZspEm3WO2pjqtHQHpW7VY7PssjnuMN0LKp1hlt2Ycpkug+pU
ouY8Uyxm6PY5aWSMudy4ZB9XnC0wac41PMm0eTCrFE03PeO6zaNbDPPMNLdl
mzYXHDDiMe1eTIysAuLLY0FTqZblkCXb/Oy80+aRJcnlmp2enh21y/DWyi6e
OH/lCRzscA/OAd/gvWm6JIH5SmTJramKoeug6m02OxxzuPjgo0cPYUM1iX/u
ldFV4dEznA/S+Vo9Mjs7BzIGe0xdpaaevi+xo38IgNSz4HKZpmK4DMk5J2ma
JsuSIhse0/IQk9kXgMFzcfFJA6NzJtq2K2Ds/zoCyBNAaprm9PikqWGMQ7Jw
kuLl49vZh0pgw7Vgn3XLboBG06NJLsswXarmUnXDAmNAXbDhktFbt8pOnxIr
nUQq+IqwRfkKWeqtysAXYhsWTjfxVBg3GCvwpLDH5BFmYjDMeIdntxPMWbIk
5lR4jhPm2JsKITzzEPNndJl6TKpwCxKTxJyMzjPiojwxEYsWUBmT6ilYCAZP
laJMYiDeCvBWhveg8JRQBkAK6MABFCeqqOWPPax44ou7DYsvF1+yG6VOwaxP
zeOZTk4r7O4YBO0jUZ2Y7L26JNx+ELPJDQ31eQeyARp0A3xT/4wSXREy/DkE
8mbJaCNw/MQEJVmkMnU3N6Vm5do8DuAx6nimgqhzw0JU1fBQKhPO/jPnDt+4
jcE9yVod3tBPCLxvkQjPuNHlwvoNJoU9hppdnPes5h3jQ9/w1uMwuLeD3DYA
cznejo6OJiclu5xuHMr+UiXLXo0Tb50l5i/X4vvNy4hoImcI864tnoPJ7SPM
fHEztCXhTFkT/o3GXW4ict3xejqzVDQevVWFfJmMTJR/8f4YXKAZ6Cpq8MvB
yQbAqLeGkbcOgiit4/tmy57pn0v4oF5meXM9UNNhnoKBq9NgLKtDw5Otjf2E
ehQiCd+IeotveYWTzyORxsa62dkZHAWGYZrWB/dYBYRTaRriAOgQAyvpYLEW
1eKmeHVd4+j8JMi6pls6rz3gFTfUNjpHAzDyPa8rn/FcMqKSlbTW8b9ClNfa
4D4hltoAZk3bxiubWrAchiiLJWpk8aJZAgBEJLmpsWF4aMxbKI4ZS+BmuRP9
uE0C5ieYN6LiErVwcpyzyOAFxUACeX0hOE9DvWNweAWzleAEPM/i5PVDeKRA
E4tRRbkcQyz45lw0RUU8tKFMnkLF028RHciSb7YU3lcThrJPPSsoKHwJWFHD
I/YQqmKVrSVr6EUur1jsx3gkGb1QXlRnRcTzfy1h7MLkZVhE6J/nwmLQiBp8
fo57/ATzvREfGK+/gyE/ZKnXMuU+qKbDqLBWZyb9e8RVDREFcyws1oKmpknE
Ht8h3t9eM8o0DVyKg5Ipc9HUfbbbSmOmH1K55SkLFx5EzRCDFCUM3X/YC4Yj
ekSWyYvh8aoZJhbGcooaUTpnNI/bEwyuEn8BKYPXOuFOEZbY4LW20FWnmOSJ
tUp4hiJGRYVH4Fu0ZoqMxZXG8U8SYe+VZhWLoLmdiUa7qNtqAi6aoOTQXNe8
iYlLl67hJveoTA1MUHTwVyOEMubV1aKMjrDZ0SjgOlwzdRMMU8tQMLlDJNIb
lkV5ITEiasKg3Bu6iesdDVMselzdxMclVhPF7Hpc8oH1xAwKPMSVJf64G5+8
9hYX5S4tss/wFc5dOaOZvrdFeOVaHGkqPqfiLZKMSKbykUmRZ9x1JxivxBkp
cMEpxkcwDUHjCgaBkxuUvLoLLxcqUJnfjHCI5BBrEg65KLLUEovAscqJt7CO
ysuZMZ9putpQ1OcgvIeiPl8JbSpgB+H1WrHgIyXeRaCCyOJiP0RRFHG+wtmy
TN+HS6698kkUXbT8pYWFJHJryiC6wScG0N/i4S1MGsOqecxfwJlXNEIJBf4p
OK262onXJeLrjQ1RMQfBQWGm6guHUq/lQy1ftWYM2oMUGqZCFw3RFZ6CTP2/
vBs/3fYP7/eQeKmYLpnF+PRNPiTys5+uZvooQz6HSwFOss8Qwg82fpXQrjb6
KdPYkjjcr7pCgAIUoAAFKEABClCAAhSgAAUoQAEK0G9E/irTK2C1a4ACFKAA
fRESyVyKosgBClCAAhSgz6APIFSQKJEaoAAFKEAB+kX6AEUD+BmgAAUoQL+K
PuXX/xOjBgEKUIACtILo/wcLwoLp
    "], {{0, 309}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> {120, 120}, Interleaving -> 
    True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Artist" -> "Harshie", "DateTimeOriginal" -> 
        DateObject[{2019, 12, 3, 3, 15, 30.}, "Instant", "Gregorian", 0.], 
        "DateTimeDigitized" -> 
        DateObject[{2019, 12, 3, 3, 15, 30.}, "Instant", "Gregorian", 0.], 
        "SubSecTimeOriginal" -> Quantity["73", "Milliseconds"], 
        "SubSecTimeDigitized" -> Quantity["73", "Milliseconds"], "XPAuthor" -> 
        "Harshie"], "XMP" -> 
      Association[
       "DublinCoreSchema" -> Association["Creator" -> "Harshie"], 
        "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2019, 12, 3, 3, 15, 30.}, "Instant", "Gregorian", 0.]], 
        "MediaManagementSchema" -> 
        Association[
         "InstanceID" -> "uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b"]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{450, 309},
  PlotRange->{{0, 450}, {0, 309}}]], "Output",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{
  3.784452287187585*^9, 3.7844524201390963`*^9, 3.7844524774867334`*^9, {
   3.784452521776188*^9, 3.7844525841527987`*^9}, 3.784472240688119*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"20a11978-6a6b-47f5-9caa-c2b7e2e5e867"]
}, Open  ]],

Cell[TextData[{
 StyleBox["CONCLUSION:", "Section",
  FontVariations->{"Underline"->True}],
 "\n\nAs a whole, Quick Sort Algorithm is the fastest among all the other \
three algorithms. The time complexity of this algorithm is O(NlogN) which is \
the best when compared with the rest. The time complexity of Insertion sort \
is O(N^2) which comes after quick sort in sorting the data.The sorting \
algorithm after Insertion sort will be Selection sort with time complexity \
O(N^2) and the last will be Bubble Sort. So, the bubble sort is the slowest \
as it compares each element with the entire values in the list. "
}], "Text",
 CellChangeTimes->{{3.7843341305651646`*^9, 3.7843341476763773`*^9}, 
   3.7843980084138775`*^9},ExpressionUUID->"71c0adf8-bb81-4432-a0b6-\
334ab25b68d4"]
},
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
SpellingDictionaries->{"CorrectWords"->{
 "Addtion", "N'", "I\[CloseCurlyQuote]", "th", "vextor", "Elangovan"}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 378, 8, 71, "Text",ExpressionUUID->"a374b088-54a9-4aee-9008-cbede0616881"],
Cell[939, 30, 825, 15, 109, "Text",ExpressionUUID->"182e28cf-dd67-4e55-b1a1-d6436989d94c"],
Cell[1767, 47, 455, 11, 73, "Text",ExpressionUUID->"047758fc-5c7a-49f2-bed6-25edeb5fb716"],
Cell[2225, 60, 529, 11, 78, "Text",ExpressionUUID->"2efce5f8-e751-4d1d-99fb-2dd1654eed0f"],
Cell[CellGroupData[{
Cell[2779, 75, 219, 3, 31, "Item",ExpressionUUID->"3caea936-7cf5-4833-a4f6-0a1e10dc6a46"],
Cell[3001, 80, 191, 3, 31, "Item",ExpressionUUID->"846cce7b-79b9-4a23-bf63-3259b1427856"],
Cell[3195, 85, 196, 3, 31, "Item",ExpressionUUID->"fa88dd5f-ecb4-4382-a321-47072a895d0f"],
Cell[3394, 90, 192, 3, 31, "Item",ExpressionUUID->"f5a7f7f0-2012-4975-8f34-c2f874cc7250"],
Cell[3589, 95, 189, 3, 31, "Item",ExpressionUUID->"17003b53-935e-422d-bcb2-f6f599c299c3"],
Cell[3781, 100, 194, 3, 31, "Item",ExpressionUUID->"984163c4-4117-435f-baa2-c75c2b638296"]
}, Open  ]],
Cell[3990, 106, 266, 6, 34, "Text",ExpressionUUID->"0d09629c-3281-44d9-83af-627dc501b7b7"],
Cell[CellGroupData[{
Cell[4281, 116, 163, 3, 26, "Subitem",ExpressionUUID->"dec54cfd-e056-43b9-8964-229f49064100"],
Cell[4447, 121, 161, 3, 26, "Subitem",ExpressionUUID->"25c70f88-ef7c-40f1-8fb0-b7d58bd92ec0"],
Cell[4611, 126, 160, 3, 26, "Subitem",ExpressionUUID->"560a5c6b-0580-49c2-8a3f-303c5559d116"],
Cell[4774, 131, 158, 3, 26, "Subitem",ExpressionUUID->"04e86f78-1def-4020-8e1e-4d5b424c8fba"]
}, Open  ]],
Cell[4947, 137, 332, 6, 28, "Input",ExpressionUUID->"88b928ed-b244-4405-a0c4-cac63f067cc8"],
Cell[5282, 145, 71, 0, 34, "Text",ExpressionUUID->"ce285835-a316-4d96-a3ba-c0f4b3070526"],
Cell[5356, 147, 560, 12, 73, "Text",ExpressionUUID->"e17b33a5-b3c4-4f79-8c28-536a73b89254"],
Cell[5919, 161, 3423, 83, 342, "Input",ExpressionUUID->"22c8c732-3e09-461d-8eb0-25ccff88fb7c"],
Cell[9345, 246, 485, 10, 73, "Text",ExpressionUUID->"811ac69a-a74f-4cfd-9202-88e7dcfedf42"],
Cell[9833, 258, 2436, 56, 228, "Input",ExpressionUUID->"9b3e2d03-ae5d-44f5-9a83-7903f64d1f23"],
Cell[12272, 316, 556, 11, 95, "Text",ExpressionUUID->"abc0be64-411b-4739-9d41-9b255d0c76fc"],
Cell[12831, 329, 2589, 62, 247, "Input",ExpressionUUID->"859def7f-320e-446b-8f8a-9a59a7c9fbac"],
Cell[15423, 393, 582, 11, 95, "Text",ExpressionUUID->"077a9e21-35cb-464d-8426-e36b36123565"],
Cell[16008, 406, 5938, 148, 456, "Input",ExpressionUUID->"8a0a2281-9e91-4c79-82fd-300a7473659c"],
Cell[21949, 556, 153, 6, 56, "Text",ExpressionUUID->"c449fa79-fa30-4860-8d57-1c280aaca539"],
Cell[22105, 564, 607, 11, 84, "Text",ExpressionUUID->"4998ab41-a692-47bc-bef3-a07de5357c88"],
Cell[22715, 577, 716, 13, 28, "Input",ExpressionUUID->"f514f992-0506-4caf-b4d1-a6a273fea8cb"],
Cell[23434, 592, 392, 9, 28, "Input",ExpressionUUID->"d6bc5f36-2354-4e55-ab7f-bb043c8568a5"],
Cell[23829, 603, 281, 7, 28, "Input",ExpressionUUID->"9e455d3f-582a-463b-9071-1a049394e27d"],
Cell[CellGroupData[{
Cell[24135, 614, 309, 6, 28, "Input",ExpressionUUID->"5e4bc9b7-4dc0-403f-81a5-f19640de593c"],
Cell[24447, 622, 437, 8, 32, "Output",ExpressionUUID->"3a53b860-5d4a-4b2a-b0be-fa5295d40228"]
}, Open  ]],
Cell[24899, 633, 241, 4, 40, "Text",ExpressionUUID->"97c30064-6495-449b-ba48-e559b80da5d7"],
Cell[CellGroupData[{
Cell[25165, 641, 863, 22, 86, "Input",ExpressionUUID->"5dd4f5eb-aa69-4ec6-b84c-9cb3927804ba"],
Cell[26031, 665, 550, 11, 32, "Output",ExpressionUUID->"c31dad6a-bd27-4b77-8c3f-8d9ca6d7f0d7"]
}, Open  ]],
Cell[26596, 679, 243, 4, 40, "Text",ExpressionUUID->"e8a7f34a-5f69-4d3d-952a-d6af97937b2b"],
Cell[CellGroupData[{
Cell[26864, 687, 860, 22, 86, "Input",ExpressionUUID->"3498b7a8-0699-495e-a70a-7e3a69a65fcf"],
Cell[27727, 711, 14370, 190, 593, "Output",ExpressionUUID->"4fd3bd59-d9ad-4db7-88bc-9b87a2df5bd1"]
}, Open  ]],
Cell[42112, 904, 270, 4, 40, "Text",ExpressionUUID->"2b5d630f-d59c-4cbc-a115-ac10865e2d5b"],
Cell[42385, 910, 973, 24, 105, "Input",ExpressionUUID->"4cacea48-f4c4-482d-a19f-cd73aefa188b"],
Cell[43361, 936, 268, 4, 40, "Text",ExpressionUUID->"961a83f1-7bff-4569-b2e5-1054283ba7fd"],
Cell[43632, 942, 143, 2, 28, "Input",ExpressionUUID->"bd736e36-7cf6-4fec-a8fa-377ab1890e39"],
Cell[43778, 946, 724, 16, 28, "Input",ExpressionUUID->"f974c3db-1f52-4c56-a9f5-5f2096b11ccc"],
Cell[44505, 964, 258, 6, 28, "Input",ExpressionUUID->"09062be5-c192-40e6-9f6f-62cd4357124f"],
Cell[44766, 972, 359, 9, 28, "Input",ExpressionUUID->"5aca3858-74ec-4961-98a8-329a18df3e7a"],
Cell[45128, 983, 250, 6, 28, "Input",ExpressionUUID->"3f3fa0dd-4485-4403-810b-fd43f850f648"],
Cell[CellGroupData[{
Cell[45403, 993, 123, 1, 28, "Input",ExpressionUUID->"29eab913-7e10-48da-acf6-5eb535fd532c"],
Cell[45529, 996, 9804, 233, 180, "Output",ExpressionUUID->"14eec7a5-55e1-4f58-b27a-895cbe675ce7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55370, 1234, 123, 1, 28, "Input",ExpressionUUID->"701a72f1-9317-414c-8072-28ead41d6bd1"],
Cell[55496, 1237, 9809, 233, 180, "Output",ExpressionUUID->"8fb92895-061d-4fe2-9ced-bcf8cced9abe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65342, 1475, 120, 1, 28, "Input",ExpressionUUID->"b27aa617-75a1-4a3d-9898-6ac9d5d6d14a"],
Cell[65465, 1478, 9753, 232, 180, "Output",ExpressionUUID->"45e0ec21-bdf1-4a2e-90d5-7984bc6e094d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75255, 1715, 119, 1, 28, "Input",ExpressionUUID->"69c6747a-9419-4194-8214-9d30928bd5fc"],
Cell[75377, 1718, 9884, 235, 189, "Output",ExpressionUUID->"444c17bd-8aa5-4a17-9984-d16eb0ec20c2"]
}, Open  ]],
Cell[85276, 1956, 344, 5, 39, "Text",ExpressionUUID->"ab5ad36a-a564-4113-80e2-0737e6f49016"],
Cell[85623, 1963, 2885, 69, 124, "Input",ExpressionUUID->"694d4e99-9940-4b81-a612-6cb28da79373"],
Cell[CellGroupData[{
Cell[88533, 2036, 177, 2, 28, "Input",ExpressionUUID->"42bb8d33-38f9-49d7-ab17-0f74d7690b62"],
Cell[88713, 2040, 857, 18, 32, "Output",ExpressionUUID->"708750b0-3fa9-4835-a160-3ee6cbc1c452"]
}, Open  ]],
Cell[89585, 2061, 484, 10, 78, "Text",ExpressionUUID->"24ead540-dd60-4ce0-93fd-def9746b8571"],
Cell[CellGroupData[{
Cell[90094, 2075, 2414, 63, 67, "Input",ExpressionUUID->"91f297d5-730d-491f-b1e9-9edef315a34e"],
Cell[92511, 2140, 2855, 60, 139, "Output",ExpressionUUID->"8c40eca2-2ac5-4a89-a6ab-0df554b1390b"]
}, Open  ]],
Cell[95381, 2203, 283, 6, 34, "Text",ExpressionUUID->"0417d68b-60a1-4247-9e94-23e4824e83e3"],
Cell[CellGroupData[{
Cell[95689, 2213, 1752, 53, 67, "Input",ExpressionUUID->"f64144c4-c315-46d5-9456-49e6422e564a"],
Cell[97444, 2268, 2072, 40, 157, "Output",ExpressionUUID->"5f01df11-9403-40ea-add7-130ffeb79853"]
}, Open  ]],
Cell[99531, 2311, 142, 3, 34, "Text",ExpressionUUID->"6a89cb65-955e-406f-91c1-ea2b70312ba5"],
Cell[CellGroupData[{
Cell[99698, 2318, 1015, 25, 48, "Input",ExpressionUUID->"60479cdf-4471-494d-aa9c-b303b56ec83a"],
Cell[100716, 2345, 6980, 169, 263, "Output",ExpressionUUID->"52c29afc-ff7e-46c2-bf11-2476a258eb40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107733, 2519, 2074, 49, 86, "Input",ExpressionUUID->"9b7687f0-db90-429f-bf07-9efd40faedb2"],
Cell[109810, 2570, 2275, 45, 365, "Output",ExpressionUUID->"96ae0f83-5604-4ca8-8188-32ccbe5b2f84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112122, 2620, 4057, 96, 105, "Input",ExpressionUUID->"06b9ba40-2a61-41e4-8269-3f48fcd5da95"],
Cell[116182, 2718, 2304, 45, 389, "Output",ExpressionUUID->"9f89f274-eeda-4579-adb7-1dac9fea0f16"]
}, Open  ]],
Cell[118501, 2766, 319, 7, 34, "Text",ExpressionUUID->"775d0d23-5204-49af-81a1-b31d917cb06e"],
Cell[CellGroupData[{
Cell[118845, 2777, 652, 11, 28, "Input",ExpressionUUID->"c9b994f0-5197-4df1-bee0-ffb698b75d23"],
Cell[119500, 2790, 84494, 1395, 335, "Output",ExpressionUUID->"20a11978-6a6b-47f5-9caa-c2b7e2e5e867"]
}, Open  ]],
Cell[204009, 4188, 785, 13, 139, "Text",ExpressionUUID->"71c0adf8-bb81-4432-a0b6-334ab25b68d4"]
}
]
*)

