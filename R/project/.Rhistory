x = 'Methods of discovery',
y = 'Frequency')
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), fill = meth, color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency')
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Log-distances from the Sun') +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_color_discrete(name = "Methods")
# Box plot of the dataset
ggplot(expodataset, aes(meth,log10(dist),col=meth)) +
geom_boxplot(na.rm = T) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Log-distances from the Sun') +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), fill = meth, color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year")) +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year")) +
scale_color_discrete(name = "Methods")
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill=meth, color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill=meth, color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill=meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill=meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
guides(color=guide_legend(title="sale year"))
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist), color = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),fill =meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),col = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Methods")
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Method of Discovery")
# Histogram of the dataset
ggplot(expodataset, aes(x = log(dist),col = meth)) +
geom_histogram(position = "identity",na.rm = T,bins = 30) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Frequency') +
scale_color_discrete(name = "Method of Discovery")
# Box plot of the dataset
ggplot(expodataset, aes(meth,log10(dist),col=meth)) +
geom_boxplot(na.rm = T) +
facet_wrap(~meth) +
labs(
title = "Plot of log-distance from Sun",
x = 'Methods of discovery',
y = 'Log-distances from the Sun') +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_color_discrete(name = "Methods of Discovery")
plot(fitlm)
g2 <- ggplot(expodataset, aes(log10(mass),log10(dist), colour = as.factor(meth))) +
xlab('Log-Masses') +
ylab('Log-distances from the Sun') +
scale_color_discrete(name="Methods of \nDiscovery") +
geom_point_interactive(aes(tooltip = id,
data_id = id,
onclick = link),alpha=0.5,
size = 1.5)
ggiraph(code = print(g2), width = 0.8,tooltip_opacity = 0.5)
g2 <- ggplot(expodataset, aes(log10(mass),log10(dist), colour = as.factor(meth))) +
xlab('Log-Masses') +
ylab('Log-distances from the Sun') +
scale_color_discrete(name="Methods of \nDiscovery") +
geom_point_interactive(aes(tooltip = id,
data_id = id,
onclick = link),alpha=0.5,
size = 1.5,na.rm=T)
g2 <- ggplot(expodataset, aes(log10(mass),log10(dist), colour = as.factor(meth))) +
labs(
title = "Exoplanet Interactive Plot",
x = 'Log-Masses',
y = 'Log-distances from the Sun') +
scale_color_discrete(name="Methods of Discovery") +
geom_point_interactive(aes(tooltip = id,
data_id = id,
onclick = link),alpha=0.5,
size = 1.5,na.rm=T)
ggiraph(code = print(g2), width = 0.8,tooltip_opacity = 0.5)
ggplot(expodataset1, aes(x = type, y = log(mass))) +
geom_violin(na.rm=TRUE) +
xlab('Cluster Types') +
ylab('Log-Mass') +
labs(title = "Violin plot for log-mass of the Exoplanets")
#We would remove the empty rows from the dataset
expodataset1 <- expodataset1 %>% drop_na(r_asc,decl)
# data is splitted using gsub function and then converted to time format.
expodataset1$r_asc1 <- gsub(" ", ":", expodataset1$r_asc, fixed = TRUE)
expodataset1$r_asc1 <- hms(expodataset1$r_asc1)
expodataset1$r_asc1 <- period_to_seconds(expodataset1$r_asc1)
expodataset1$decl1 <- gsub(" ", ":", expodataset1$decl, fixed = TRUE)
expodataset1$decl1 <- hms(expodataset1$decl1)
expodataset1$decl1 <- period_to_seconds(expodataset1$decl1)
ggplot(expodataset1, aes(r_asc1, decl1, color= meth)) +
geom_point() +
labs(title="Celestial Map for Exoplanets",
x="Right ascension (seconds)",
y="declination (seconds)")
#plotting with cluster types
ggplot(expodataset1, aes(r_asc1, decl1, color= type)) +
geom_point() +
labs(title="Celestial Map for Exoplanets with Types",
x="Right ascension (seconds)",
y="declination (seconds)")
ggplot(expodataset1, aes(r_asc1, decl1, color= meth)) +
geom_point() +
labs(title="Celestial Map for Exoplanets",
x="Right ascension (seconds)",
y="Declination (seconds)") +
scale_color_discrete(name="Cluster types")
#plotting with cluster types
ggplot(expodataset1, aes(r_asc1, decl1, color= type)) +
geom_point() +
labs(title="Celestial Map for Exoplanets with Types",
x="Right ascension (seconds)",
y="declination (seconds)") +
scale_color_discrete(name="Cluster types")
ggplot(expodataset1, aes(r_asc1, decl1, color= meth)) +
geom_point() +
labs(title="Celestial Map for Exoplanets",
x="Right ascension (seconds)",
y="Declination (seconds)") +
scale_color_discrete(name="Method of Discovery")
ggplot(expodataset1, aes(r_asc1, decl1, color= meth)) +
geom_point() +
labs(title="Celestial Map for Exoplanets",
x="Right ascension (seconds)",
y="Declination (seconds)") +
scale_color_discrete(name="Method of \nDiscovery")
time_series<-ggplot(exoplanets_count, aes(x = year, y = Count, group = meth)) +
geom_point() +
geom_line(aes(color = meth)) +
transition_reveal(year) +
labs(title = 'Evolution of exoplanets discovered by methods',
subtitle = 'Year: {frame_along}',
x = 'Year',
y = 'Count of discovery')
animation <- animate(time_series, renderer = gifski_renderer(loop = T)) # check out docs for more options
time_series<-ggplot(exoplanets_count, aes(x = year, y = Count, group = meth)) +
geom_point() +
geom_line(aes(color = meth)) +
transition_reveal(year) +
labs(title = 'Evolution of exoplanets discovered by methods',
subtitle = 'Year: {frame_along}',
x = 'Year',
y = 'Count of discovery')
exoplanets_count <- expodataset %>%
group_by(meth, year) %>%
summarise(Count = length(meth)) %>%
mutate(Count = cumsum(Count))
exoplanets_count <- na.omit(exoplanets_count)
time_series<-ggplot(exoplanets_count, aes(x = year, y = Count, group = meth)) +
geom_point() +
geom_line(aes(color = meth)) +
transition_reveal(year) +
labs(title = 'Evolution of exoplanets discovered by methods',
subtitle = 'Year: {frame_along}',
x = 'Year',
y = 'Count of discovery')
animation <- animate(time_series, renderer = gifski_renderer(loop = T)) # check out docs for more options
animation <- animate(time_series, renderer = gifski_renderer(loop = T)) # check out docs for more options
animation
time_series<-ggplot(exoplanets_count, aes(x = year, y = Count, group = meth)) +
geom_point() +
geom_line(aes(color = meth)) +
transition_reveal(year) +
labs(title = 'Evolution of exoplanets discovered by methods',
subtitle = 'Year: {frame_along}',
x = 'Year',
y = 'Count of discovery') +
scale_color_discrete(name="Method of \nDiscovery")
animation <- animate(time_series, renderer = gifski_renderer(loop = T)) # check out docs for more options
animation
maxyr <-  max(expodataset1$year,na.rm = T)
ui <- shinyUI(
fluidPage(
# Application title
titlePanel("Exoplanet Discovery"),
# Sidebar with a slider input for Year and Type of exoplanet
sidebarLayout(
sidebarPanel(
sliderInput("year",
"Year:",
min = 2009,
max = maxyr,
value = 2010),
selectInput("type",
label = "Type:",
choices = c('hot_jupiters', 'cold_gas_giants', 'Rocky', 'others','All'),
selected = 'cold_gas_giants')
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("scatterplot")
)
)
)
)
server <- function(input, output) {
output$scatterplot <- renderPlot({
# generating dataset based on inputs from ui block
#x    <- expodataset1
x <- reactive({
if(input$type != 'All'){
expodataset1[((expodataset1$year <= input$year) & (expodataset1$type == input$type)),]
}
else {
expodataset1[(expodataset1$year <= input$year),]
}
})
ggplot(x(), aes(x= log(mass),y = log(dist), color = meth)) +
geom_point(na.rm=TRUE) +
labs(
title = "Plot of Exoplanets discovered over years",
x = 'Log - Mass',
y = 'Log - Distance')
})
}
shinyApp(ui, server)
maxyr <-  max(expodataset1$year,na.rm = T)
ui <- shinyUI(
fluidPage(
# Application title
titlePanel("Exoplanet Discovery"),
# Sidebar with a slider input for Year and Type of exoplanet
sidebarLayout(
sidebarPanel(
sliderInput("year",
"Year:",
min = 2009,
max = maxyr,
value = 2010),
selectInput("type",
label = "Type:",
choices = c('hot_jupiters', 'cold_gas_giants', 'Rocky', 'others','All'),
selected = 'cold_gas_giants')
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("scatterplot")
)
)
)
)
server <- function(input, output) {
output$scatterplot <- renderPlot({
# generating dataset based on inputs from ui block
#x    <- expodataset1
x <- reactive({
if(input$type != 'All'){
expodataset1[((expodataset1$year <= input$year) & (expodataset1$type == input$type)),]
}
else {
expodataset1[(expodataset1$year <= input$year),]
}
})
ggplot(x(), aes(x= log(mass),y = log(dist), color = meth)) +
geom_point(na.rm=TRUE) +
labs(
title = "Plot of Exoplanets discovered over years",
x = 'Log - Mass',
y = 'Log - Distance')
})
}
shinyApp(ui, server)
maxyr <-  max(expodataset1$year,na.rm = T)
ui <- shinyUI(
fluidPage(
# Application title
titlePanel("Exoplanet Discovery"),
# Sidebar with a slider input for Year and Type of exoplanet
sidebarLayout(
sidebarPanel(
sliderInput("year",
"Year:",
min = 2009,
max = maxyr,
value = 2010),
selectInput("type",
label = "Type:",
choices = c('hot_jupiters', 'cold_gas_giants', 'Rocky', 'others','All'),
selected = 'cold_gas_giants')
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("scatterplot")
)
)
)
)
server <- function(input, output) {
output$scatterplot <- renderPlot({
# generating dataset based on inputs from ui block
#x    <- expodataset1
x <- reactive({
if(input$type != 'All'){
expodataset1[((expodataset1$year <= input$year) & (expodataset1$type == input$type)),]
}
else {
expodataset1[(expodataset1$year <= input$year),]
}
})
ggplot(x(), aes(x= log(mass),y = log(dist), color = meth)) +
geom_point(na.rm=TRUE) +
labs(
title = "Plot of Exoplanets discovered over years",
x = 'Log - Mass',
y = 'Log - Distance') +
scale_color_discrete(name="Method of \nDiscovery")
})
}
shinyApp(ui, server)
fitlm
maxyr <-  max(expodataset1$year,na.rm = T)
ui <- shinyUI(
fluidPage(
# Application title
titlePanel("Exoplanet Discovery"),
# Sidebar with a slider input for Year and Type of exoplanet
sidebarLayout(
sidebarPanel(
sliderInput("year",
"Year:",
min = 2009,
max = maxyr,
value = 2010),
selectInput("type",
label = "Type:",
choices = c('hot_jupiters', 'cold_gas_giants', 'Rocky', 'others','All'),
selected = 'cold_gas_giants')
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("scatterplot")
)
)
)
)
server <- function(input, output) {
output$scatterplot <- renderPlot({
# generating dataset based on inputs from ui block
#x    <- expodataset1
x <- reactive({
if(input$type != 'All'){
expodataset1[((expodataset1$year <= input$year) & (expodataset1$type == input$type)),]
}
else {
expodataset1[(expodataset1$year <= input$year),]
}
})
ggplot(x(), aes(x= log(mass),y = log(dist), color = meth)) +
geom_point(na.rm=TRUE) +
labs(
title = "Plot of Exoplanets discovered over years",
x = 'Log - Mass',
y = 'Log - Distance')
})
}
shinyApp(ui, server)
fitlm
fitlm
fitlm[1]
fitlm[[1]]
fitlm[[[1]]]
fitlm[[1],]
fitlm[1,]
fitlm$coefficients[1]
cat("log(period) =",fitlm$coefficients[1],fitlm$coefficients[2],"*log(mass)  ",fitlm$coefficients[3],"*log(temp) + ",fitlm$coefficients[4],"*log(axis)")
cat("log(period) =",fitlm$coefficients[1],fitlm$coefficients[2],"*log(mass)",fitlm$coefficients[3],"*log(temp) + ",fitlm$coefficients[4],"*log(axis)")
summary(fitlm)
expodataset <- expodataset %>% rename(jupiter_radius = radius)
